# Rust
/target/
**/*.rs.bk
*.pdb
Cargo.lock.bak
audit.toml.lock
.cargo/

# IDE
.idea/
.vscode/
.cursor/
.fleet/
.helix/
.zed/
*.swp
*.swo
*.kate-swp
*~
.DS_Store
*.iml
.project
.classpath
.settings/
*.code-workspace

# Build artifacts
*.o
*.so
*.dylib
*.dll
*.exe

# Development
.env
.env.local
*.log
.gdb_history
core
core.*

# Security/Testing
*.key
*.pem
*.crt
*.cer
*.p12
*.pfx
test-certs/
secrets/

# Test artifacts
/coverage/
*.profraw
*.profdata
/fuzz/corpus/
/fuzz/artifacts/

# Performance profiling
perf.data
perf.data.old
*.folded
*.collapsed
perf.script
massif.out.*
callgrind.out.*
cachegrind.out.*
# Exclude flamegraph SVGs except in benchmarks/
*.svg
!benchmarks/**/*.svg

# Benchmark outputs
/target/criterion/
*.hyperfine.json
*.bench.json

# Temporary files
/tmp/
*.tmp
*.bak
*.orig
*.rej
.#*
\#*\#
Session.vim
*_output.txt

# Database files
*.db
*.db-shm
*.db-wal
*.sqlite
*.sqlite3
*.sqlite-shm
*.sqlite-wal

# PCAP files
*.pcap
*.pcapng

# Scan output files
/results/
/output/
/scans/
*-scan-results.*

# Reference files
/code_ref/

# Local memory banks (keep private, don't sync to remote)
CLAUDE.local.md
*.local.md
.claude-session
.claude/
.claude/settings.local.json

# Documentation build
/docs/book/
/target/doc/

# OS
Thumbs.db
ehthumbs.db
Desktop.ini
