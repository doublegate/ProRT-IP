<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="135276807"><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="517" width="0.7414%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="501" width="0.7414%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="485" width="0.7414%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="469" width="0.7414%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="453" width="0.7414%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="437" width="0.7414%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.74%)</title><rect x="0.0000%" y="421" width="0.7414%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.37%)</title><rect x="0.3707%" y="405" width="0.3707%" height="15" fill="rgb(228,23,34)" fg:x="501504" fg:w="501504"/><text x="0.6207%" y="415.50"></text></g><g><title>[libc.so.6] (9,222,184 samples, 6.82%)</title><rect x="0.7414%" y="517" width="6.8173%" height="15" fill="rgb(218,30,26)" fg:x="1003008" fg:w="9222184"/><text x="0.9914%" y="527.50">[libc.so...</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports::{{closure}} (8,707,942 samples, 6.44%)</title><rect x="1.1216%" y="501" width="6.4371%" height="15" fill="rgb(220,122,19)" fg:x="1517250" fg:w="8707942"/><text x="1.3716%" y="511.50">prtip_sc..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports_with_progress::{{closure}} (8,707,942 samples, 6.44%)</title><rect x="1.1216%" y="485" width="6.4371%" height="15" fill="rgb(250,228,42)" fg:x="1517250" fg:w="8707942"/><text x="1.3716%" y="495.50">prtip_sc..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;prtip_core::types::ScanResult,prtip_core::error::Error&gt;&gt;&gt; (8,707,942 samples, 6.44%)</title><rect x="1.1216%" y="469" width="6.4371%" height="15" fill="rgb(240,193,28)" fg:x="1517250" fg:w="8707942"/><text x="1.3716%" y="479.50">core::pt..</text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,707,942 samples, 6.44%)</title><rect x="1.1216%" y="453" width="6.4371%" height="15" fill="rgb(216,20,37)" fg:x="1517250" fg:w="8707942"/><text x="1.3716%" y="463.50">&lt;tokio::..</text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (8,707,942 samples, 6.44%)</title><rect x="1.1216%" y="437" width="6.4371%" height="15" fill="rgb(206,188,39)" fg:x="1517250" fg:w="8707942"/><text x="1.3716%" y="447.50">tokio::r..</text></g><g><title>[libc.so.6] (8,707,942 samples, 6.44%)</title><rect x="1.1216%" y="421" width="6.4371%" height="15" fill="rgb(217,207,13)" fg:x="1517250" fg:w="8707942"/><text x="1.3716%" y="431.50">[libc.so..</text></g><g><title>[libc.so.6] (7,259,606 samples, 5.37%)</title><rect x="2.1922%" y="405" width="5.3665%" height="15" fill="rgb(231,73,38)" fg:x="2965586" fg:w="7259606"/><text x="2.4422%" y="415.50">[libc.s..</text></g><g><title>[libc.so.6] (5,325,128 samples, 3.94%)</title><rect x="3.6222%" y="389" width="3.9365%" height="15" fill="rgb(225,20,46)" fg:x="4900064" fg:w="5325128"/><text x="3.8722%" y="399.50">[lib..</text></g><g><title>alloc::raw_vec::finish_grow (672,798 samples, 0.50%)</title><rect x="7.5587%" y="501" width="0.4973%" height="15" fill="rgb(210,31,41)" fg:x="10225192" fg:w="672798"/><text x="7.8087%" y="511.50"></text></g><g><title>realloc (672,798 samples, 0.50%)</title><rect x="7.5587%" y="485" width="0.4973%" height="15" fill="rgb(221,200,47)" fg:x="10225192" fg:w="672798"/><text x="7.8087%" y="495.50"></text></g><g><title>[libc.so.6] (672,798 samples, 0.50%)</title><rect x="7.5587%" y="469" width="0.4973%" height="15" fill="rgb(226,26,5)" fg:x="10225192" fg:w="672798"/><text x="7.8087%" y="479.50"></text></g><g><title>[libc.so.6] (672,798 samples, 0.50%)</title><rect x="7.5587%" y="453" width="0.4973%" height="15" fill="rgb(249,33,26)" fg:x="10225192" fg:w="672798"/><text x="7.8087%" y="463.50"></text></g><g><title>[unknown] (2,674,304 samples, 1.98%)</title><rect x="7.5587%" y="517" width="1.9769%" height="15" fill="rgb(235,183,28)" fg:x="10225192" fg:w="2674304"/><text x="7.8087%" y="527.50">[..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports::{{closure}} (2,001,506 samples, 1.48%)</title><rect x="8.0561%" y="501" width="1.4796%" height="15" fill="rgb(221,5,38)" fg:x="10897990" fg:w="2001506"/><text x="8.3061%" y="511.50"></text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports_with_progress::{{closure}} (1,500,002 samples, 1.11%)</title><rect x="8.4268%" y="485" width="1.1088%" height="15" fill="rgb(247,18,42)" fg:x="11399494" fg:w="1500002"/><text x="8.6768%" y="495.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (501,504 samples, 0.37%)</title><rect x="9.5356%" y="453" width="0.3707%" height="15" fill="rgb(241,131,45)" fg:x="12899496" fg:w="501504"/><text x="9.7856%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (501,504 samples, 0.37%)</title><rect x="9.5356%" y="437" width="0.3707%" height="15" fill="rgb(249,31,29)" fg:x="12899496" fg:w="501504"/><text x="9.7856%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (501,504 samples, 0.37%)</title><rect x="9.5356%" y="421" width="0.3707%" height="15" fill="rgb(225,111,53)" fg:x="12899496" fg:w="501504"/><text x="9.7856%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::hash (501,504 samples, 0.37%)</title><rect x="9.9064%" y="437" width="0.3707%" height="15" fill="rgb(238,160,17)" fg:x="13401000" fg:w="501504"/><text x="10.1564%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,599,644 samples, 1.18%)</title><rect x="9.5356%" y="517" width="1.1825%" height="15" fill="rgb(214,148,48)" fg:x="12899496" fg:w="1599644"/><text x="9.7856%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::park (1,599,644 samples, 1.18%)</title><rect x="9.5356%" y="501" width="1.1825%" height="15" fill="rgb(232,36,49)" fg:x="12899496" fg:w="1599644"/><text x="9.7856%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,599,644 samples, 1.18%)</title><rect x="9.5356%" y="485" width="1.1825%" height="15" fill="rgb(209,103,24)" fg:x="12899496" fg:w="1599644"/><text x="9.7856%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1,599,644 samples, 1.18%)</title><rect x="9.5356%" y="469" width="1.1825%" height="15" fill="rgb(229,88,8)" fg:x="12899496" fg:w="1599644"/><text x="9.7856%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (1,098,140 samples, 0.81%)</title><rect x="9.9064%" y="453" width="0.8118%" height="15" fill="rgb(213,181,19)" fg:x="13401000" fg:w="1098140"/><text x="10.1564%" y="463.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (596,636 samples, 0.44%)</title><rect x="10.2771%" y="437" width="0.4410%" height="15" fill="rgb(254,191,54)" fg:x="13902504" fg:w="596636"/><text x="10.5271%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (596,636 samples, 0.44%)</title><rect x="10.2771%" y="421" width="0.4410%" height="15" fill="rgb(241,83,37)" fg:x="13902504" fg:w="596636"/><text x="10.5271%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (596,636 samples, 0.44%)</title><rect x="10.2771%" y="405" width="0.4410%" height="15" fill="rgb(233,36,39)" fg:x="13902504" fg:w="596636"/><text x="10.5271%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;prtip_core::types::ScanResult&gt;&gt; (2,990,998 samples, 2.21%)</title><rect x="10.7181%" y="485" width="2.2110%" height="15" fill="rgb(226,3,54)" fg:x="14499140" fg:w="2990998"/><text x="10.9681%" y="495.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,990,998 samples, 2.21%)</title><rect x="10.7181%" y="469" width="2.2110%" height="15" fill="rgb(245,192,40)" fg:x="14499140" fg:w="2990998"/><text x="10.9681%" y="479.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[prtip_core::types::ScanResult]&gt; (2,990,998 samples, 2.21%)</title><rect x="10.7181%" y="453" width="2.2110%" height="15" fill="rgb(238,167,29)" fg:x="14499140" fg:w="2990998"/><text x="10.9681%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;prtip_core::types::ScanResult&gt; (2,990,998 samples, 2.21%)</title><rect x="10.7181%" y="437" width="2.2110%" height="15" fill="rgb(232,182,51)" fg:x="14499140" fg:w="2990998"/><text x="10.9681%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,990,998 samples, 2.21%)</title><rect x="10.7181%" y="421" width="2.2110%" height="15" fill="rgb(231,60,39)" fg:x="14499140" fg:w="2990998"/><text x="10.9681%" y="431.50">c..</text></g><g><title>__nss_next2 (665,115 samples, 0.49%)</title><rect x="12.9291%" y="389" width="0.4917%" height="15" fill="rgb(208,69,12)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="399.50"></text></g><g><title>[libc.so.6] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="373" width="0.4917%" height="15" fill="rgb(235,93,37)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="383.50"></text></g><g><title>[libc.so.6] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="357" width="0.4917%" height="15" fill="rgb(213,116,39)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="367.50"></text></g><g><title>[libc.so.6] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="341" width="0.4917%" height="15" fill="rgb(222,207,29)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="325" width="0.4917%" height="15" fill="rgb(206,96,30)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="335.50"></text></g><g><title>_dl_catch_exception (665,115 samples, 0.49%)</title><rect x="12.9291%" y="309" width="0.4917%" height="15" fill="rgb(218,138,4)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="319.50"></text></g><g><title>[libc.so.6] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="293" width="0.4917%" height="15" fill="rgb(250,191,14)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="277" width="0.4917%" height="15" fill="rgb(239,60,40)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="287.50"></text></g><g><title>_dl_catch_exception (665,115 samples, 0.49%)</title><rect x="12.9291%" y="261" width="0.4917%" height="15" fill="rgb(206,27,48)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="271.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="245" width="0.4917%" height="15" fill="rgb(225,35,8)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="255.50"></text></g><g><title>_dl_catch_exception (665,115 samples, 0.49%)</title><rect x="12.9291%" y="229" width="0.4917%" height="15" fill="rgb(250,213,24)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="213" width="0.4917%" height="15" fill="rgb(247,123,22)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="223.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="197" width="0.4917%" height="15" fill="rgb(231,138,38)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="181" width="0.4917%" height="15" fill="rgb(231,145,46)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="165" width="0.4917%" height="15" fill="rgb(251,118,11)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (665,115 samples, 0.49%)</title><rect x="12.9291%" y="149" width="0.4917%" height="15" fill="rgb(217,147,25)" fg:x="17490138" fg:w="665115"/><text x="13.1791%" y="159.50"></text></g><g><title>prtip_network::privilege::drop_privileges (1,538,288 samples, 1.14%)</title><rect x="12.9291%" y="485" width="1.1371%" height="15" fill="rgb(247,81,37)" fg:x="17490138" fg:w="1538288"/><text x="13.1791%" y="495.50"></text></g><g><title>prtip_network::privilege::unix_drop_privileges (1,538,288 samples, 1.14%)</title><rect x="12.9291%" y="469" width="1.1371%" height="15" fill="rgb(209,12,38)" fg:x="17490138" fg:w="1538288"/><text x="13.1791%" y="479.50"></text></g><g><title>nix::unistd::Group::from_name (1,538,288 samples, 1.14%)</title><rect x="12.9291%" y="453" width="1.1371%" height="15" fill="rgb(227,1,9)" fg:x="17490138" fg:w="1538288"/><text x="13.1791%" y="463.50"></text></g><g><title>nix::unistd::Group::from_anything (1,538,288 samples, 1.14%)</title><rect x="12.9291%" y="437" width="1.1371%" height="15" fill="rgb(248,47,43)" fg:x="17490138" fg:w="1538288"/><text x="13.1791%" y="447.50"></text></g><g><title>nix::unistd::Group::from_name::{{closure}} (1,538,288 samples, 1.14%)</title><rect x="12.9291%" y="421" width="1.1371%" height="15" fill="rgb(221,10,30)" fg:x="17490138" fg:w="1538288"/><text x="13.1791%" y="431.50"></text></g><g><title>getgrnam_r (1,538,288 samples, 1.14%)</title><rect x="12.9291%" y="405" width="1.1371%" height="15" fill="rgb(210,229,1)" fg:x="17490138" fg:w="1538288"/><text x="13.1791%" y="415.50"></text></g><g><title>_nss_systemd_getgrnam_r (873,173 samples, 0.65%)</title><rect x="13.4208%" y="389" width="0.6455%" height="15" fill="rgb(222,148,37)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="399.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="373" width="0.6455%" height="15" fill="rgb(234,67,33)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="383.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="357" width="0.6455%" height="15" fill="rgb(247,98,35)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="367.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="341" width="0.6455%" height="15" fill="rgb(247,138,52)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="351.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="325" width="0.6455%" height="15" fill="rgb(213,79,30)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="335.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="309" width="0.6455%" height="15" fill="rgb(246,177,23)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="319.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="293" width="0.6455%" height="15" fill="rgb(230,62,27)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="303.50"></text></g><g><title>[libnss_systemd.so.2] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="277" width="0.6455%" height="15" fill="rgb(216,154,8)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="287.50"></text></g><g><title>[libc.so.6] (873,173 samples, 0.65%)</title><rect x="13.4208%" y="261" width="0.6455%" height="15" fill="rgb(244,35,45)" fg:x="18155253" fg:w="873173"/><text x="13.6708%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (967,754 samples, 0.72%)</title><rect x="14.0663%" y="437" width="0.7154%" height="15" fill="rgb(251,115,12)" fg:x="19028426" fg:w="967754"/><text x="14.3163%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (967,754 samples, 0.72%)</title><rect x="14.0663%" y="421" width="0.7154%" height="15" fill="rgb(240,54,50)" fg:x="19028426" fg:w="967754"/><text x="14.3163%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (967,754 samples, 0.72%)</title><rect x="14.0663%" y="405" width="0.7154%" height="15" fill="rgb(233,84,52)" fg:x="19028426" fg:w="967754"/><text x="14.3163%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (501,504 samples, 0.37%)</title><rect x="14.7817%" y="437" width="0.3707%" height="15" fill="rgb(207,117,47)" fg:x="19996180" fg:w="501504"/><text x="15.0317%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push_mut (501,504 samples, 0.37%)</title><rect x="14.7817%" y="421" width="0.3707%" height="15" fill="rgb(249,43,39)" fg:x="19996180" fg:w="501504"/><text x="15.0317%" y="431.50"></text></g><g><title>core::ptr::write (501,504 samples, 0.37%)</title><rect x="14.7817%" y="405" width="0.3707%" height="15" fill="rgb(209,38,44)" fg:x="19996180" fg:w="501504"/><text x="15.0317%" y="415.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::acquire_owned::{{closure}} (501,504 samples, 0.37%)</title><rect x="15.1524%" y="437" width="0.3707%" height="15" fill="rgb(236,212,23)" fg:x="20497684" fg:w="501504"/><text x="15.4024%" y="447.50"></text></g><g><title>prtip::main::{{closure}} (10,427,498 samples, 7.71%)</title><rect x="10.7181%" y="517" width="7.7083%" height="15" fill="rgb(242,79,21)" fg:x="14499140" fg:w="10427498"/><text x="10.9681%" y="527.50">prtip::main..</text></g><g><title>prtip::run::{{closure}} (10,427,498 samples, 7.71%)</title><rect x="10.7181%" y="501" width="7.7083%" height="15" fill="rgb(211,96,35)" fg:x="14499140" fg:w="10427498"/><text x="10.9681%" y="511.50">prtip::run:..</text></g><g><title>prtip_scanner::scheduler::ScanScheduler::execute_scan_ports::{{closure}} (5,898,212 samples, 4.36%)</title><rect x="14.0663%" y="485" width="4.3601%" height="15" fill="rgb(253,215,40)" fg:x="19028426" fg:w="5898212"/><text x="14.3163%" y="495.50">prtip..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports::{{closure}} (5,898,212 samples, 4.36%)</title><rect x="14.0663%" y="469" width="4.3601%" height="15" fill="rgb(211,81,21)" fg:x="19028426" fg:w="5898212"/><text x="14.3163%" y="479.50">prtip..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports_with_progress::{{closure}} (5,898,212 samples, 4.36%)</title><rect x="14.0663%" y="453" width="4.3601%" height="15" fill="rgb(208,190,38)" fg:x="19028426" fg:w="5898212"/><text x="14.3163%" y="463.50">prtip..</text></g><g><title>tokio::task::spawn::spawn (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="437" width="2.9033%" height="15" fill="rgb(235,213,38)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="447.50">to..</text></g><g><title>tokio::task::spawn::spawn_inner (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="421" width="2.9033%" height="15" fill="rgb(237,122,38)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="431.50">to..</text></g><g><title>tokio::runtime::context::current::with_current (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="405" width="2.9033%" height="15" fill="rgb(244,218,35)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="415.50">to..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="389" width="2.9033%" height="15" fill="rgb(240,68,47)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="399.50">st..</text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="373" width="2.9033%" height="15" fill="rgb(210,16,53)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="383.50">to..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="357" width="2.9033%" height="15" fill="rgb(235,124,12)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="367.50">co..</text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="341" width="2.9033%" height="15" fill="rgb(224,169,11)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="351.50">to..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="325" width="2.9033%" height="15" fill="rgb(250,166,2)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="335.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="309" width="2.9033%" height="15" fill="rgb(242,216,29)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="319.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="293" width="2.9033%" height="15" fill="rgb(230,116,27)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="303.50">to..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="277" width="2.9033%" height="15" fill="rgb(228,99,48)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="287.50">to..</text></g><g><title>tokio::runtime::task::new_task (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="261" width="2.9033%" height="15" fill="rgb(253,11,6)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="271.50">to..</text></g><g><title>tokio::runtime::task::raw::RawTask::new (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="245" width="2.9033%" height="15" fill="rgb(247,143,39)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="255.50">to..</text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="229" width="2.9033%" height="15" fill="rgb(236,97,10)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="239.50">to..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="213" width="2.9033%" height="15" fill="rgb(233,208,19)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="223.50">al..</text></g><g><title>alloc::alloc::exchange_malloc (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="197" width="2.9033%" height="15" fill="rgb(216,164,2)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="207.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="181" width="2.9033%" height="15" fill="rgb(220,129,5)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="191.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="165" width="2.9033%" height="15" fill="rgb(242,17,10)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="175.50">al..</text></g><g><title>alloc::alloc::alloc (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="149" width="2.9033%" height="15" fill="rgb(242,107,0)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="159.50">al..</text></g><g><title>__rustc::__rdl_alloc (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="133" width="2.9033%" height="15" fill="rgb(251,28,31)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="143.50">__..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="117" width="2.9033%" height="15" fill="rgb(233,223,10)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="127.50">st..</text></g><g><title>std::sys::alloc::unix::aligned_malloc (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="101" width="2.9033%" height="15" fill="rgb(215,21,27)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="111.50">st..</text></g><g><title>posix_memalign (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="85" width="2.9033%" height="15" fill="rgb(232,23,21)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="95.50">po..</text></g><g><title>[libc.so.6] (3,927,450 samples, 2.90%)</title><rect x="15.5231%" y="69" width="2.9033%" height="15" fill="rgb(244,5,23)" fg:x="20999188" fg:w="3927450"/><text x="15.7731%" y="79.50">[l..</text></g><g><title>[libc.so.6] (3,469,394 samples, 2.56%)</title><rect x="15.8617%" y="53" width="2.5647%" height="15" fill="rgb(226,81,46)" fg:x="21457244" fg:w="3469394"/><text x="16.1117%" y="63.50">[l..</text></g><g><title>[libc.so.6] (2,466,386 samples, 1.82%)</title><rect x="16.6032%" y="37" width="1.8232%" height="15" fill="rgb(247,70,30)" fg:x="22460252" fg:w="2466386"/><text x="16.8532%" y="47.50">[..</text></g><g><title>prtip_scanner::lockfree_aggregator::LockFreeAggregator::push (3,400,542 samples, 2.51%)</title><rect x="18.4264%" y="517" width="2.5138%" height="15" fill="rgb(212,68,19)" fg:x="24926638" fg:w="3400542"/><text x="18.6764%" y="527.50">pr..</text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (3,400,542 samples, 2.51%)</title><rect x="18.4264%" y="501" width="2.5138%" height="15" fill="rgb(240,187,13)" fg:x="24926638" fg:w="3400542"/><text x="18.6764%" y="511.50">cr..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3,400,542 samples, 2.51%)</title><rect x="18.4264%" y="485" width="2.5138%" height="15" fill="rgb(223,113,26)" fg:x="24926638" fg:w="3400542"/><text x="18.6764%" y="495.50">co..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3,400,542 samples, 2.51%)</title><rect x="18.4264%" y="469" width="2.5138%" height="15" fill="rgb(206,192,2)" fg:x="24926638" fg:w="3400542"/><text x="18.6764%" y="479.50">co..</text></g><g><title>prtip_scanner::storage_backend::StorageBackend::add_results_batch (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="517" width="2.2906%" height="15" fill="rgb(241,108,4)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="527.50">p..</text></g><g><title>prtip_scanner::memory_storage::MemoryStorage::add_results_batch (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="501" width="2.2906%" height="15" fill="rgb(247,173,49)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="511.50">p..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="485" width="2.2906%" height="15" fill="rgb(224,114,35)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="495.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="469" width="2.2906%" height="15" fill="rgb(245,159,27)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="479.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="453" width="2.2906%" height="15" fill="rgb(245,172,44)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="463.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="437" width="2.2906%" height="15" fill="rgb(236,23,11)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="447.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="421" width="2.2906%" height="15" fill="rgb(205,117,38)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="431.50">c..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="405" width="2.2906%" height="15" fill="rgb(237,72,25)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="415.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="389" width="2.2906%" height="15" fill="rgb(244,70,9)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="399.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="373" width="2.2906%" height="15" fill="rgb(217,125,39)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="383.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="357" width="2.2906%" height="15" fill="rgb(235,36,10)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="367.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="341" width="2.2906%" height="15" fill="rgb(251,123,47)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="351.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="325" width="2.2906%" height="15" fill="rgb(221,13,13)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="335.50">a..</text></g><g><title>core::ptr::write (3,098,683 samples, 2.29%)</title><rect x="20.9402%" y="309" width="2.2906%" height="15" fill="rgb(238,131,9)" fg:x="28327180" fg:w="3098683"/><text x="21.1902%" y="319.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (501,504 samples, 0.37%)</title><rect x="23.2308%" y="485" width="0.3707%" height="15" fill="rgb(211,50,8)" fg:x="31425863" fg:w="501504"/><text x="23.4808%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (501,504 samples, 0.37%)</title><rect x="23.2308%" y="469" width="0.3707%" height="15" fill="rgb(245,182,24)" fg:x="31425863" fg:w="501504"/><text x="23.4808%" y="479.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.37%)</title><rect x="23.2308%" y="453" width="0.3707%" height="15" fill="rgb(242,14,37)" fg:x="31425863" fg:w="501504"/><text x="23.4808%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (501,504 samples, 0.37%)</title><rect x="23.2308%" y="437" width="0.3707%" height="15" fill="rgb(246,228,12)" fg:x="31425863" fg:w="501504"/><text x="23.4808%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (501,504 samples, 0.37%)</title><rect x="23.2308%" y="421" width="0.3707%" height="15" fill="rgb(213,55,15)" fg:x="31425863" fg:w="501504"/><text x="23.4808%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (501,504 samples, 0.37%)</title><rect x="23.2308%" y="405" width="0.3707%" height="15" fill="rgb(209,9,3)" fg:x="31425863" fg:w="501504"/><text x="23.4808%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (1,003,008 samples, 0.74%)</title><rect x="23.2308%" y="517" width="0.7414%" height="15" fill="rgb(230,59,30)" fg:x="31425863" fg:w="1003008"/><text x="23.4808%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_remote_task (1,003,008 samples, 0.74%)</title><rect x="23.2308%" y="501" width="0.7414%" height="15" fill="rgb(209,121,21)" fg:x="31425863" fg:w="1003008"/><text x="23.4808%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::push (501,504 samples, 0.37%)</title><rect x="23.6015%" y="485" width="0.3707%" height="15" fill="rgb(220,109,13)" fg:x="31927367" fg:w="501504"/><text x="23.8515%" y="495.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (1,775,851 samples, 1.31%)</title><rect x="23.9722%" y="517" width="1.3128%" height="15" fill="rgb(232,18,1)" fg:x="32428871" fg:w="1775851"/><text x="24.2222%" y="527.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="501" width="0.9741%" height="15" fill="rgb(215,41,42)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="511.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="485" width="0.9741%" height="15" fill="rgb(224,123,36)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="469" width="0.9741%" height="15" fill="rgb(240,125,3)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="479.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="453" width="0.9741%" height="15" fill="rgb(205,98,50)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="437" width="0.9741%" height="15" fill="rgb(205,185,37)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="421" width="0.9741%" height="15" fill="rgb(238,207,15)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,317,795 samples, 0.97%)</title><rect x="24.3108%" y="405" width="0.9741%" height="15" fill="rgb(213,199,42)" fg:x="32886927" fg:w="1317795"/><text x="24.5608%" y="415.50"></text></g><g><title>prtip (38,530,001 samples, 28.48%)</title><rect x="0.0000%" y="533" width="28.4823%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="38530001"/><text x="0.2500%" y="543.50">prtip</text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (4,325,279 samples, 3.20%)</title><rect x="25.2850%" y="517" width="3.1974%" height="15" fill="rgb(207,46,11)" fg:x="34204722" fg:w="4325279"/><text x="25.5350%" y="527.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (4,325,279 samples, 3.20%)</title><rect x="25.2850%" y="501" width="3.1974%" height="15" fill="rgb(241,35,35)" fg:x="34204722" fg:w="4325279"/><text x="25.5350%" y="511.50">tok..</text></g><g><title>tokio::runtime::task::core::Trailer::set_waker (4,325,279 samples, 3.20%)</title><rect x="25.2850%" y="485" width="3.1974%" height="15" fill="rgb(243,32,47)" fg:x="34204722" fg:w="4325279"/><text x="25.5350%" y="495.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,325,279 samples, 3.20%)</title><rect x="25.2850%" y="469" width="3.1974%" height="15" fill="rgb(247,202,23)" fg:x="34204722" fg:w="4325279"/><text x="25.5350%" y="479.50">tok..</text></g><g><title>tokio::runtime::task::core::Trailer::set_waker::{{closure}} (4,325,279 samples, 3.20%)</title><rect x="25.2850%" y="453" width="3.1974%" height="15" fill="rgb(219,102,11)" fg:x="34204722" fg:w="4325279"/><text x="25.5350%" y="463.50">tok..</text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="517" width="0.7414%" height="15" fill="rgb(243,110,44)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="527.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="501" width="0.7414%" height="15" fill="rgb(222,74,54)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="511.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="485" width="0.7414%" height="15" fill="rgb(216,99,12)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="469" width="0.7414%" height="15" fill="rgb(226,22,26)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="479.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="453" width="0.7414%" height="15" fill="rgb(217,163,10)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="437" width="0.7414%" height="15" fill="rgb(213,25,53)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::InnerState&gt;&gt; (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="421" width="0.7414%" height="15" fill="rgb(252,105,26)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="405" width="0.7414%" height="15" fill="rgb(220,39,43)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="389" width="0.7414%" height="15" fill="rgb(229,68,48)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="373" width="0.7414%" height="15" fill="rgb(252,8,32)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,003,008 samples, 0.74%)</title><rect x="28.4823%" y="357" width="0.7414%" height="15" fill="rgb(223,20,43)" fg:x="38530001" fg:w="1003008"/><text x="28.7323%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (501,504 samples, 0.37%)</title><rect x="31.0147%" y="373" width="0.3707%" height="15" fill="rgb(229,81,49)" fg:x="41955742" fg:w="501504"/><text x="31.2647%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (501,504 samples, 0.37%)</title><rect x="31.0147%" y="357" width="0.3707%" height="15" fill="rgb(236,28,36)" fg:x="41955742" fg:w="501504"/><text x="31.2647%" y="367.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,003,008 samples, 0.74%)</title><rect x="31.0147%" y="453" width="0.7414%" height="15" fill="rgb(249,185,26)" fg:x="41955742" fg:w="1003008"/><text x="31.2647%" y="463.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_mio::{{closure}}::{{closure}} (1,003,008 samples, 0.74%)</title><rect x="31.0147%" y="437" width="0.7414%" height="15" fill="rgb(249,174,33)" fg:x="41955742" fg:w="1003008"/><text x="31.2647%" y="447.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (1,003,008 samples, 0.74%)</title><rect x="31.0147%" y="421" width="0.7414%" height="15" fill="rgb(233,201,37)" fg:x="41955742" fg:w="1003008"/><text x="31.2647%" y="431.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1,003,008 samples, 0.74%)</title><rect x="31.0147%" y="405" width="0.7414%" height="15" fill="rgb(221,78,26)" fg:x="41955742" fg:w="1003008"/><text x="31.2647%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1,003,008 samples, 0.74%)</title><rect x="31.0147%" y="389" width="0.7414%" height="15" fill="rgb(250,127,30)" fg:x="41955742" fg:w="1003008"/><text x="31.2647%" y="399.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (501,504 samples, 0.37%)</title><rect x="31.3855%" y="373" width="0.3707%" height="15" fill="rgb(230,49,44)" fg:x="42457246" fg:w="501504"/><text x="31.6355%" y="383.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (501,504 samples, 0.37%)</title><rect x="31.3855%" y="357" width="0.3707%" height="15" fill="rgb(229,67,23)" fg:x="42457246" fg:w="501504"/><text x="31.6355%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (501,504 samples, 0.37%)</title><rect x="31.3855%" y="341" width="0.3707%" height="15" fill="rgb(249,83,47)" fg:x="42457246" fg:w="501504"/><text x="31.6355%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="31.3855%" y="325" width="0.3707%" height="15" fill="rgb(215,43,3)" fg:x="42457246" fg:w="501504"/><text x="31.6355%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="31.3855%" y="309" width="0.3707%" height="15" fill="rgb(238,154,13)" fg:x="42457246" fg:w="501504"/><text x="31.6355%" y="319.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (3,927,245 samples, 2.90%)</title><rect x="29.2238%" y="517" width="2.9031%" height="15" fill="rgb(219,56,2)" fg:x="39533009" fg:w="3927245"/><text x="29.4738%" y="527.50">&lt;t..</text></g><g><title>tokio::net::tcp::stream::TcpStream::connect::{{closure}} (3,927,245 samples, 2.90%)</title><rect x="29.2238%" y="501" width="2.9031%" height="15" fill="rgb(233,0,4)" fg:x="39533009" fg:w="3927245"/><text x="29.4738%" y="511.50">to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_addr::{{closure}} (1,504,512 samples, 1.11%)</title><rect x="31.0147%" y="485" width="1.1122%" height="15" fill="rgb(235,30,7)" fg:x="41955742" fg:w="1504512"/><text x="31.2647%" y="495.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_mio::{{closure}} (1,504,512 samples, 1.11%)</title><rect x="31.0147%" y="469" width="1.1122%" height="15" fill="rgb(250,79,13)" fg:x="41955742" fg:w="1504512"/><text x="31.2647%" y="479.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (501,504 samples, 0.37%)</title><rect x="31.7562%" y="453" width="0.3707%" height="15" fill="rgb(211,146,34)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (501,504 samples, 0.37%)</title><rect x="31.7562%" y="437" width="0.3707%" height="15" fill="rgb(228,22,38)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="447.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (501,504 samples, 0.37%)</title><rect x="31.7562%" y="421" width="0.3707%" height="15" fill="rgb(235,168,5)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="431.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle (501,504 samples, 0.37%)</title><rect x="31.7562%" y="405" width="0.3707%" height="15" fill="rgb(221,155,16)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="415.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (501,504 samples, 0.37%)</title><rect x="31.7562%" y="389" width="0.3707%" height="15" fill="rgb(215,215,53)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="399.50"></text></g><g><title>tokio::runtime::io::driver::Handle::add_source (501,504 samples, 0.37%)</title><rect x="31.7562%" y="373" width="0.3707%" height="15" fill="rgb(223,4,10)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="383.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate (501,504 samples, 0.37%)</title><rect x="31.7562%" y="357" width="0.3707%" height="15" fill="rgb(234,103,6)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="367.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (501,504 samples, 0.37%)</title><rect x="31.7562%" y="341" width="0.3707%" height="15" fill="rgb(227,97,0)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (501,504 samples, 0.37%)</title><rect x="31.7562%" y="325" width="0.3707%" height="15" fill="rgb(234,150,53)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (501,504 samples, 0.37%)</title><rect x="31.7562%" y="309" width="0.3707%" height="15" fill="rgb(228,201,54)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (501,504 samples, 0.37%)</title><rect x="31.7562%" y="293" width="0.3707%" height="15" fill="rgb(222,22,37)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (501,504 samples, 0.37%)</title><rect x="31.7562%" y="277" width="0.3707%" height="15" fill="rgb(237,53,32)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="287.50"></text></g><g><title>alloc::alloc::alloc (501,504 samples, 0.37%)</title><rect x="31.7562%" y="261" width="0.3707%" height="15" fill="rgb(233,25,53)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="271.50"></text></g><g><title>__rustc::__rdl_alloc (501,504 samples, 0.37%)</title><rect x="31.7562%" y="245" width="0.3707%" height="15" fill="rgb(210,40,34)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (501,504 samples, 0.37%)</title><rect x="31.7562%" y="229" width="0.3707%" height="15" fill="rgb(241,220,44)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="239.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (501,504 samples, 0.37%)</title><rect x="31.7562%" y="213" width="0.3707%" height="15" fill="rgb(235,28,35)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="223.50"></text></g><g><title>posix_memalign (501,504 samples, 0.37%)</title><rect x="31.7562%" y="197" width="0.3707%" height="15" fill="rgb(210,56,17)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="207.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="31.7562%" y="181" width="0.3707%" height="15" fill="rgb(224,130,29)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="191.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="31.7562%" y="165" width="0.3707%" height="15" fill="rgb(235,212,8)" fg:x="42958750" fg:w="501504"/><text x="32.0062%" y="175.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="34.3513%" y="501" width="0.3707%" height="15" fill="rgb(223,33,50)" fg:x="46469278" fg:w="501504"/><text x="34.6013%" y="511.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="34.3513%" y="485" width="0.3707%" height="15" fill="rgb(219,149,13)" fg:x="46469278" fg:w="501504"/><text x="34.6013%" y="495.50"></text></g><g><title>[libc.so.6] (3,962,661 samples, 2.93%)</title><rect x="32.1269%" y="517" width="2.9293%" height="15" fill="rgb(250,156,29)" fg:x="43460254" fg:w="3962661"/><text x="32.3769%" y="527.50">[l..</text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (452,133 samples, 0.33%)</title><rect x="34.7220%" y="501" width="0.3342%" height="15" fill="rgb(216,193,19)" fg:x="46970782" fg:w="452133"/><text x="34.9720%" y="511.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (452,133 samples, 0.33%)</title><rect x="34.7220%" y="485" width="0.3342%" height="15" fill="rgb(216,135,14)" fg:x="46970782" fg:w="452133"/><text x="34.9720%" y="495.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (452,133 samples, 0.33%)</title><rect x="34.7220%" y="469" width="0.3342%" height="15" fill="rgb(241,47,5)" fg:x="46970782" fg:w="452133"/><text x="34.9720%" y="479.50"></text></g><g><title>core::hint::spin_loop (452,133 samples, 0.33%)</title><rect x="34.7220%" y="453" width="0.3342%" height="15" fill="rgb(233,42,35)" fg:x="46970782" fg:w="452133"/><text x="34.9720%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (452,133 samples, 0.33%)</title><rect x="34.7220%" y="437" width="0.3342%" height="15" fill="rgb(231,13,6)" fg:x="46970782" fg:w="452133"/><text x="34.9720%" y="447.50"></text></g><g><title>tokio::runtime::time::Inner::lock (501,504 samples, 0.37%)</title><rect x="35.0562%" y="421" width="0.3707%" height="15" fill="rgb(207,181,40)" fg:x="47422915" fg:w="501504"/><text x="35.3062%" y="431.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (501,504 samples, 0.37%)</title><rect x="35.0562%" y="405" width="0.3707%" height="15" fill="rgb(254,173,49)" fg:x="47422915" fg:w="501504"/><text x="35.3062%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (501,504 samples, 0.37%)</title><rect x="35.0562%" y="389" width="0.3707%" height="15" fill="rgb(221,1,38)" fg:x="47422915" fg:w="501504"/><text x="35.3062%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (501,504 samples, 0.37%)</title><rect x="35.0562%" y="373" width="0.3707%" height="15" fill="rgb(206,124,46)" fg:x="47422915" fg:w="501504"/><text x="35.3062%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="35.0562%" y="357" width="0.3707%" height="15" fill="rgb(249,21,11)" fg:x="47422915" fg:w="501504"/><text x="35.3062%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="35.0562%" y="341" width="0.3707%" height="15" fill="rgb(222,201,40)" fg:x="47422915" fg:w="501504"/><text x="35.3062%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (501,504 samples, 0.37%)</title><rect x="35.4269%" y="373" width="0.3707%" height="15" fill="rgb(235,61,29)" fg:x="47924419" fg:w="501504"/><text x="35.6769%" y="383.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (2,006,016 samples, 1.48%)</title><rect x="35.0562%" y="501" width="1.4829%" height="15" fill="rgb(219,207,3)" fg:x="47422915" fg:w="2006016"/><text x="35.3062%" y="511.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (2,006,016 samples, 1.48%)</title><rect x="35.0562%" y="485" width="1.4829%" height="15" fill="rgb(222,56,46)" fg:x="47422915" fg:w="2006016"/><text x="35.3062%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (2,006,016 samples, 1.48%)</title><rect x="35.0562%" y="469" width="1.4829%" height="15" fill="rgb(239,76,54)" fg:x="47422915" fg:w="2006016"/><text x="35.3062%" y="479.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (2,006,016 samples, 1.48%)</title><rect x="35.0562%" y="453" width="1.4829%" height="15" fill="rgb(231,124,27)" fg:x="47422915" fg:w="2006016"/><text x="35.3062%" y="463.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (2,006,016 samples, 1.48%)</title><rect x="35.0562%" y="437" width="1.4829%" height="15" fill="rgb(249,195,6)" fg:x="47422915" fg:w="2006016"/><text x="35.3062%" y="447.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (1,504,512 samples, 1.11%)</title><rect x="35.4269%" y="421" width="1.1122%" height="15" fill="rgb(237,174,47)" fg:x="47924419" fg:w="1504512"/><text x="35.6769%" y="431.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (1,504,512 samples, 1.11%)</title><rect x="35.4269%" y="405" width="1.1122%" height="15" fill="rgb(206,201,31)" fg:x="47924419" fg:w="1504512"/><text x="35.6769%" y="415.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1,504,512 samples, 1.11%)</title><rect x="35.4269%" y="389" width="1.1122%" height="15" fill="rgb(231,57,52)" fg:x="47924419" fg:w="1504512"/><text x="35.6769%" y="399.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (1,003,008 samples, 0.74%)</title><rect x="35.7977%" y="373" width="0.7414%" height="15" fill="rgb(248,177,22)" fg:x="48425923" fg:w="1003008"/><text x="36.0477%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,003,008 samples, 0.74%)</title><rect x="35.7977%" y="357" width="0.7414%" height="15" fill="rgb(215,211,37)" fg:x="48425923" fg:w="1003008"/><text x="36.0477%" y="367.50"></text></g><g><title>core::ptr::write (1,003,008 samples, 0.74%)</title><rect x="35.7977%" y="341" width="0.7414%" height="15" fill="rgb(241,128,51)" fg:x="48425923" fg:w="1003008"/><text x="36.0477%" y="351.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (493,820 samples, 0.37%)</title><rect x="36.5391%" y="357" width="0.3650%" height="15" fill="rgb(227,165,31)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="367.50"></text></g><g><title>tokio::runtime::time::Inner::lock (493,820 samples, 0.37%)</title><rect x="36.5391%" y="341" width="0.3650%" height="15" fill="rgb(228,167,24)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="351.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (493,820 samples, 0.37%)</title><rect x="36.5391%" y="325" width="0.3650%" height="15" fill="rgb(228,143,12)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="335.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (493,820 samples, 0.37%)</title><rect x="36.5391%" y="309" width="0.3650%" height="15" fill="rgb(249,149,8)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="319.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (493,820 samples, 0.37%)</title><rect x="36.5391%" y="293" width="0.3650%" height="15" fill="rgb(243,35,44)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (493,820 samples, 0.37%)</title><rect x="36.5391%" y="277" width="0.3650%" height="15" fill="rgb(246,89,9)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (493,820 samples, 0.37%)</title><rect x="36.5391%" y="261" width="0.3650%" height="15" fill="rgb(233,213,13)" fg:x="49428931" fg:w="493820"/><text x="36.7891%" y="271.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (973,226 samples, 0.72%)</title><rect x="36.5391%" y="485" width="0.7194%" height="15" fill="rgb(233,141,41)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="495.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (973,226 samples, 0.72%)</title><rect x="36.5391%" y="469" width="0.7194%" height="15" fill="rgb(239,167,4)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (973,226 samples, 0.72%)</title><rect x="36.5391%" y="453" width="0.7194%" height="15" fill="rgb(209,217,16)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (973,226 samples, 0.72%)</title><rect x="36.5391%" y="437" width="0.7194%" height="15" fill="rgb(219,88,35)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="447.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (973,226 samples, 0.72%)</title><rect x="36.5391%" y="421" width="0.7194%" height="15" fill="rgb(220,193,23)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="431.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (973,226 samples, 0.72%)</title><rect x="36.5391%" y="405" width="0.7194%" height="15" fill="rgb(230,90,52)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="415.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (973,226 samples, 0.72%)</title><rect x="36.5391%" y="389" width="0.7194%" height="15" fill="rgb(252,106,19)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="399.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (973,226 samples, 0.72%)</title><rect x="36.5391%" y="373" width="0.7194%" height="15" fill="rgb(206,74,20)" fg:x="49428931" fg:w="973226"/><text x="36.7891%" y="383.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::driver (479,406 samples, 0.35%)</title><rect x="36.9041%" y="357" width="0.3544%" height="15" fill="rgb(230,138,44)" fg:x="49922751" fg:w="479406"/><text x="37.1541%" y="367.50"></text></g><g><title>tokio::runtime::driver::Handle::time (479,406 samples, 0.35%)</title><rect x="36.9041%" y="341" width="0.3544%" height="15" fill="rgb(235,182,43)" fg:x="49922751" fg:w="479406"/><text x="37.1541%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (479,406 samples, 0.35%)</title><rect x="36.9041%" y="325" width="0.3544%" height="15" fill="rgb(242,16,51)" fg:x="49922751" fg:w="479406"/><text x="37.1541%" y="335.50"></text></g><g><title>connect (2,434,294 samples, 1.80%)</title><rect x="39.1154%" y="421" width="1.7995%" height="15" fill="rgb(248,9,4)" fg:x="52914045" fg:w="2434294"/><text x="39.3654%" y="431.50">c..</text></g><g><title>[libc.so.6] (2,434,294 samples, 1.80%)</title><rect x="39.1154%" y="405" width="1.7995%" height="15" fill="rgb(210,31,22)" fg:x="52914045" fg:w="2434294"/><text x="39.3654%" y="415.50">[..</text></g><g><title>[libc.so.6] (972,509 samples, 0.72%)</title><rect x="40.1960%" y="389" width="0.7189%" height="15" fill="rgb(239,54,39)" fg:x="54375830" fg:w="972509"/><text x="40.4460%" y="399.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::connect (4,941,814 samples, 3.65%)</title><rect x="38.3739%" y="453" width="3.6531%" height="15" fill="rgb(230,99,41)" fg:x="51911037" fg:w="4941814"/><text x="38.6239%" y="463.50">mio:..</text></g><g><title>mio::sys::unix::tcp::connect (4,941,814 samples, 3.65%)</title><rect x="38.3739%" y="437" width="3.6531%" height="15" fill="rgb(253,106,12)" fg:x="51911037" fg:w="4941814"/><text x="38.6239%" y="447.50">mio:..</text></g><g><title>std::io::error::Error::last_os_error (1,504,512 samples, 1.11%)</title><rect x="40.9149%" y="421" width="1.1122%" height="15" fill="rgb(213,46,41)" fg:x="55348339" fg:w="1504512"/><text x="41.1649%" y="431.50"></text></g><g><title>std::sys::pal::unix::os::errno (1,504,512 samples, 1.11%)</title><rect x="40.9149%" y="405" width="1.1122%" height="15" fill="rgb(215,133,35)" fg:x="55348339" fg:w="1504512"/><text x="41.1649%" y="415.50"></text></g><g><title>__errno_location (1,003,008 samples, 0.74%)</title><rect x="41.2856%" y="389" width="0.7414%" height="15" fill="rgb(213,28,5)" fg:x="55849843" fg:w="1003008"/><text x="41.5356%" y="399.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (468,274 samples, 0.35%)</title><rect x="42.0270%" y="437" width="0.3462%" height="15" fill="rgb(215,77,49)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="447.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_mio::{{closure}}::{{closure}} (468,274 samples, 0.35%)</title><rect x="42.0270%" y="421" width="0.3462%" height="15" fill="rgb(248,100,22)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="431.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (468,274 samples, 0.35%)</title><rect x="42.0270%" y="405" width="0.3462%" height="15" fill="rgb(208,67,9)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="415.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (468,274 samples, 0.35%)</title><rect x="42.0270%" y="389" width="0.3462%" height="15" fill="rgb(219,133,21)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="399.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (468,274 samples, 0.35%)</title><rect x="42.0270%" y="373" width="0.3462%" height="15" fill="rgb(246,46,29)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (468,274 samples, 0.35%)</title><rect x="42.0270%" y="357" width="0.3462%" height="15" fill="rgb(246,185,52)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (468,274 samples, 0.35%)</title><rect x="42.0270%" y="341" width="0.3462%" height="15" fill="rgb(252,136,11)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="351.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (468,274 samples, 0.35%)</title><rect x="42.0270%" y="325" width="0.3462%" height="15" fill="rgb(219,138,53)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="335.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (468,274 samples, 0.35%)</title><rect x="42.0270%" y="309" width="0.3462%" height="15" fill="rgb(211,51,23)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (468,274 samples, 0.35%)</title><rect x="42.0270%" y="293" width="0.3462%" height="15" fill="rgb(247,221,28)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (468,274 samples, 0.35%)</title><rect x="42.0270%" y="277" width="0.3462%" height="15" fill="rgb(251,222,45)" fg:x="56852851" fg:w="468274"/><text x="42.2770%" y="287.50"></text></g><g><title>mio::net::tcp::stream::TcpStream::take_error (1,003,008 samples, 0.74%)</title><rect x="42.3732%" y="437" width="0.7414%" height="15" fill="rgb(217,162,53)" fg:x="57321125" fg:w="1003008"/><text x="42.6232%" y="447.50"></text></g><g><title>std::net::tcp::TcpStream::take_error (1,003,008 samples, 0.74%)</title><rect x="42.3732%" y="421" width="0.7414%" height="15" fill="rgb(229,93,14)" fg:x="57321125" fg:w="1003008"/><text x="42.6232%" y="431.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::take_error (1,003,008 samples, 0.74%)</title><rect x="42.3732%" y="405" width="0.7414%" height="15" fill="rgb(209,67,49)" fg:x="57321125" fg:w="1003008"/><text x="42.6232%" y="415.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::take_error (1,003,008 samples, 0.74%)</title><rect x="42.3732%" y="389" width="0.7414%" height="15" fill="rgb(213,87,29)" fg:x="57321125" fg:w="1003008"/><text x="42.6232%" y="399.50"></text></g><g><title>std::sys::net::connection::socket::getsockopt (1,003,008 samples, 0.74%)</title><rect x="42.3732%" y="373" width="0.7414%" height="15" fill="rgb(205,151,52)" fg:x="57321125" fg:w="1003008"/><text x="42.6232%" y="383.50"></text></g><g><title>getsockopt (1,003,008 samples, 0.74%)</title><rect x="42.3732%" y="357" width="0.7414%" height="15" fill="rgb(253,215,39)" fg:x="57321125" fg:w="1003008"/><text x="42.6232%" y="367.50"></text></g><g><title>core::cmp::PartialOrd::gt (501,504 samples, 0.37%)</title><rect x="43.1147%" y="229" width="0.3707%" height="15" fill="rgb(221,220,41)" fg:x="58324133" fg:w="501504"/><text x="43.3647%" y="239.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (501,504 samples, 0.37%)</title><rect x="43.1147%" y="213" width="0.3707%" height="15" fill="rgb(218,133,21)" fg:x="58324133" fg:w="501504"/><text x="43.3647%" y="223.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (501,504 samples, 0.37%)</title><rect x="43.1147%" y="197" width="0.3707%" height="15" fill="rgb(221,193,43)" fg:x="58324133" fg:w="501504"/><text x="43.3647%" y="207.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (501,504 samples, 0.37%)</title><rect x="43.1147%" y="181" width="0.3707%" height="15" fill="rgb(240,128,52)" fg:x="58324133" fg:w="501504"/><text x="43.3647%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::registration_set::Synced&gt;&gt; (980,786 samples, 0.73%)</title><rect x="43.1147%" y="341" width="0.7250%" height="15" fill="rgb(253,114,12)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::registration_set::Synced&gt;&gt; (980,786 samples, 0.73%)</title><rect x="43.1147%" y="325" width="0.7250%" height="15" fill="rgb(215,223,47)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="335.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (980,786 samples, 0.73%)</title><rect x="43.1147%" y="309" width="0.7250%" height="15" fill="rgb(248,225,23)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="319.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (980,786 samples, 0.73%)</title><rect x="43.1147%" y="293" width="0.7250%" height="15" fill="rgb(250,108,0)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="303.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (980,786 samples, 0.73%)</title><rect x="43.1147%" y="277" width="0.7250%" height="15" fill="rgb(228,208,7)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="287.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (980,786 samples, 0.73%)</title><rect x="43.1147%" y="261" width="0.7250%" height="15" fill="rgb(244,45,10)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="271.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (980,786 samples, 0.73%)</title><rect x="43.1147%" y="245" width="0.7250%" height="15" fill="rgb(207,125,25)" fg:x="58324133" fg:w="980786"/><text x="43.3647%" y="255.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (479,282 samples, 0.35%)</title><rect x="43.4854%" y="229" width="0.3543%" height="15" fill="rgb(210,195,18)" fg:x="58825637" fg:w="479282"/><text x="43.7354%" y="239.50"></text></g><g><title>clock_gettime (479,282 samples, 0.35%)</title><rect x="43.4854%" y="213" width="0.3543%" height="15" fill="rgb(249,80,12)" fg:x="58825637" fg:w="479282"/><text x="43.7354%" y="223.50"></text></g><g><title>__vdso_clock_gettime (479,282 samples, 0.35%)</title><rect x="43.4854%" y="197" width="0.3543%" height="15" fill="rgb(221,65,9)" fg:x="58825637" fg:w="479282"/><text x="43.7354%" y="207.50"></text></g><g><title>mio::poll::Registry::register (1,003,008 samples, 0.74%)</title><rect x="43.8397%" y="341" width="0.7414%" height="15" fill="rgb(235,49,36)" fg:x="59304919" fg:w="1003008"/><text x="44.0897%" y="351.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::register (501,504 samples, 0.37%)</title><rect x="44.2104%" y="325" width="0.3707%" height="15" fill="rgb(225,32,20)" fg:x="59806423" fg:w="501504"/><text x="44.4604%" y="335.50"></text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::register (501,504 samples, 0.37%)</title><rect x="44.2104%" y="309" width="0.3707%" height="15" fill="rgb(215,141,46)" fg:x="59806423" fg:w="501504"/><text x="44.4604%" y="319.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::register (501,504 samples, 0.37%)</title><rect x="44.2104%" y="293" width="0.3707%" height="15" fill="rgb(250,160,47)" fg:x="59806423" fg:w="501504"/><text x="44.4604%" y="303.50"></text></g><g><title>mio::sys::unix::selector::Selector::register (501,504 samples, 0.37%)</title><rect x="44.2104%" y="277" width="0.3707%" height="15" fill="rgb(216,222,40)" fg:x="59806423" fg:w="501504"/><text x="44.4604%" y="287.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (501,504 samples, 0.37%)</title><rect x="44.5811%" y="341" width="0.3707%" height="15" fill="rgb(234,217,39)" fg:x="60307927" fg:w="501504"/><text x="44.8311%" y="351.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (501,504 samples, 0.37%)</title><rect x="44.5811%" y="325" width="0.3707%" height="15" fill="rgb(207,178,40)" fg:x="60307927" fg:w="501504"/><text x="44.8311%" y="335.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (501,504 samples, 0.37%)</title><rect x="44.5811%" y="309" width="0.3707%" height="15" fill="rgb(221,136,13)" fg:x="60307927" fg:w="501504"/><text x="44.8311%" y="319.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle (7,372,419 samples, 5.45%)</title><rect x="43.1147%" y="389" width="5.4499%" height="15" fill="rgb(249,199,10)" fg:x="58324133" fg:w="7372419"/><text x="43.3647%" y="399.50">tokio::..</text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (7,372,419 samples, 5.45%)</title><rect x="43.1147%" y="373" width="5.4499%" height="15" fill="rgb(249,222,13)" fg:x="58324133" fg:w="7372419"/><text x="43.3647%" y="383.50">tokio::..</text></g><g><title>tokio::runtime::io::driver::Handle::add_source (7,372,419 samples, 5.45%)</title><rect x="43.1147%" y="357" width="5.4499%" height="15" fill="rgb(244,185,38)" fg:x="58324133" fg:w="7372419"/><text x="43.3647%" y="367.50">tokio::..</text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::allocate (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="341" width="3.6127%" height="15" fill="rgb(236,202,9)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="351.50">toki..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="325" width="3.6127%" height="15" fill="rgb(250,229,37)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="335.50">allo..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="309" width="3.6127%" height="15" fill="rgb(206,174,23)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="319.50">allo..</text></g><g><title>alloc::alloc::exchange_malloc (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="293" width="3.6127%" height="15" fill="rgb(211,33,43)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="303.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="277" width="3.6127%" height="15" fill="rgb(245,58,50)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="287.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="261" width="3.6127%" height="15" fill="rgb(244,68,36)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="271.50">allo..</text></g><g><title>alloc::alloc::alloc (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="245" width="3.6127%" height="15" fill="rgb(232,229,15)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="255.50">allo..</text></g><g><title>__rustc::__rdl_alloc (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="229" width="3.6127%" height="15" fill="rgb(254,30,23)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="239.50">__ru..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="213" width="3.6127%" height="15" fill="rgb(235,160,14)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="223.50">std:..</text></g><g><title>std::sys::alloc::unix::aligned_malloc (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="197" width="3.6127%" height="15" fill="rgb(212,155,44)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="207.50">std:..</text></g><g><title>posix_memalign (4,887,121 samples, 3.61%)</title><rect x="44.9519%" y="181" width="3.6127%" height="15" fill="rgb(226,2,50)" fg:x="60809431" fg:w="4887121"/><text x="45.2019%" y="191.50">posi..</text></g><g><title>[libc.so.6] (4,385,617 samples, 3.24%)</title><rect x="45.3226%" y="165" width="3.2420%" height="15" fill="rgb(234,177,6)" fg:x="61310935" fg:w="4385617"/><text x="45.5726%" y="175.50">[li..</text></g><g><title>[libc.so.6] (3,403,248 samples, 2.52%)</title><rect x="46.0488%" y="149" width="2.5158%" height="15" fill="rgb(217,24,9)" fg:x="62293304" fg:w="3403248"/><text x="46.2988%" y="159.50">[l..</text></g><g><title>[libc.so.6] (2,901,744 samples, 2.15%)</title><rect x="46.4195%" y="133" width="2.1450%" height="15" fill="rgb(220,13,46)" fg:x="62794808" fg:w="2901744"/><text x="46.6695%" y="143.50">[..</text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (17,786,438 samples, 13.15%)</title><rect x="36.5391%" y="501" width="13.1482%" height="15" fill="rgb(239,221,27)" fg:x="49428931" fg:w="17786438"/><text x="36.7891%" y="511.50">&lt;tokio::time::timeou..</text></g><g><title>tokio::net::tcp::stream::TcpStream::connect::{{closure}} (16,813,212 samples, 12.43%)</title><rect x="37.2585%" y="485" width="12.4287%" height="15" fill="rgb(222,198,25)" fg:x="50402157" fg:w="16813212"/><text x="37.5085%" y="495.50">tokio::net::tcp::st..</text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_addr::{{closure}} (15,810,204 samples, 11.69%)</title><rect x="38.0000%" y="469" width="11.6873%" height="15" fill="rgb(211,99,13)" fg:x="51405165" fg:w="15810204"/><text x="38.2500%" y="479.50">tokio::net::tcp::..</text></g><g><title>tokio::net::tcp::stream::TcpStream::connect_mio::{{closure}} (10,362,518 samples, 7.66%)</title><rect x="42.0270%" y="453" width="7.6602%" height="15" fill="rgb(232,111,31)" fg:x="56852851" fg:w="10362518"/><text x="42.2770%" y="463.50">tokio::net..</text></g><g><title>tokio::net::tcp::stream::TcpStream::new (8,891,236 samples, 6.57%)</title><rect x="43.1147%" y="437" width="6.5726%" height="15" fill="rgb(245,82,37)" fg:x="58324133" fg:w="8891236"/><text x="43.3647%" y="447.50">tokio::ne..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (8,891,236 samples, 6.57%)</title><rect x="43.1147%" y="421" width="6.5726%" height="15" fill="rgb(227,149,46)" fg:x="58324133" fg:w="8891236"/><text x="43.3647%" y="431.50">tokio::io..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (8,891,236 samples, 6.57%)</title><rect x="43.1147%" y="405" width="6.5726%" height="15" fill="rgb(218,36,50)" fg:x="58324133" fg:w="8891236"/><text x="43.3647%" y="415.50">tokio::io..</text></g><g><title>tokio::runtime::scheduler::Handle::current (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="389" width="1.1227%" height="15" fill="rgb(226,80,48)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="399.50"></text></g><g><title>tokio::runtime::context::current::with_current (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="373" width="1.1227%" height="15" fill="rgb(238,224,15)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="357" width="1.1227%" height="15" fill="rgb(241,136,10)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="367.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="341" width="1.1227%" height="15" fill="rgb(208,32,45)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="325" width="1.1227%" height="15" fill="rgb(207,135,9)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="309" width="1.1227%" height="15" fill="rgb(206,86,44)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="319.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (1,518,817 samples, 1.12%)</title><rect x="48.5645%" y="293" width="1.1227%" height="15" fill="rgb(245,177,15)" fg:x="65696552" fg:w="1518817"/><text x="48.8145%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (501,504 samples, 0.37%)</title><rect x="49.6873%" y="501" width="0.3707%" height="15" fill="rgb(206,64,50)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (501,504 samples, 0.37%)</title><rect x="49.6873%" y="485" width="0.3707%" height="15" fill="rgb(234,36,40)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (501,504 samples, 0.37%)</title><rect x="49.6873%" y="469" width="0.3707%" height="15" fill="rgb(213,64,8)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="479.50"></text></g><g><title>alloc::alloc::realloc (501,504 samples, 0.37%)</title><rect x="49.6873%" y="453" width="0.3707%" height="15" fill="rgb(210,75,36)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="463.50"></text></g><g><title>realloc (501,504 samples, 0.37%)</title><rect x="49.6873%" y="437" width="0.3707%" height="15" fill="rgb(229,88,21)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="447.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="49.6873%" y="421" width="0.3707%" height="15" fill="rgb(252,204,47)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="431.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="49.6873%" y="405" width="0.3707%" height="15" fill="rgb(208,77,27)" fg:x="67215369" fg:w="501504"/><text x="49.9373%" y="415.50"></text></g><g><title>chrono::offset::utc::Utc::now (501,504 samples, 0.37%)</title><rect x="50.0580%" y="501" width="0.3707%" height="15" fill="rgb(221,76,26)" fg:x="67716873" fg:w="501504"/><text x="50.3080%" y="511.50"></text></g><g><title>chrono::datetime::DateTime&lt;chrono::offset::utc::Utc&gt;::from_timestamp (501,504 samples, 0.37%)</title><rect x="50.0580%" y="485" width="0.3707%" height="15" fill="rgb(225,139,18)" fg:x="67716873" fg:w="501504"/><text x="50.3080%" y="495.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (501,504 samples, 0.37%)</title><rect x="50.0580%" y="469" width="0.3707%" height="15" fill="rgb(230,137,11)" fg:x="67716873" fg:w="501504"/><text x="50.3080%" y="479.50"></text></g><g><title>chrono::naive::date::cycle_to_yo (501,504 samples, 0.37%)</title><rect x="50.0580%" y="453" width="0.3707%" height="15" fill="rgb(212,28,1)" fg:x="67716873" fg:w="501504"/><text x="50.3080%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::net::tcp::stream::TcpStream&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="453" width="1.1052%" height="15" fill="rgb(248,164,17)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;mio::io_source::IoSource&lt;std::net::tcp::TcpStream&gt;&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="437" width="1.1052%" height="15" fill="rgb(222,171,42)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="421" width="1.1052%" height="15" fill="rgb(243,84,45)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::net::connection::socket::TcpStream&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="405" width="1.1052%" height="15" fill="rgb(252,49,23)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::net::connection::socket::unix::Socket&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="389" width="1.1052%" height="15" fill="rgb(215,19,7)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::fd::unix::FileDesc&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="373" width="1.1052%" height="15" fill="rgb(238,81,41)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="357" width="1.1052%" height="15" fill="rgb(210,199,37)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="367.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="341" width="1.1052%" height="15" fill="rgb(244,192,49)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="351.50"></text></g><g><title>__close (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="325" width="1.1052%" height="15" fill="rgb(226,211,11)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="335.50"></text></g><g><title>[libc.so.6] (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="309" width="1.1052%" height="15" fill="rgb(236,162,54)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="319.50"></text></g><g><title>[libc.so.6] (1,495,075 samples, 1.11%)</title><rect x="50.7560%" y="293" width="1.1052%" height="15" fill="rgb(220,229,9)" fg:x="68661131" fg:w="1495075"/><text x="51.0060%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::registration_set::Synced&gt;&gt; (991,008 samples, 0.73%)</title><rect x="51.8612%" y="421" width="0.7326%" height="15" fill="rgb(250,87,22)" fg:x="70156206" fg:w="991008"/><text x="52.1112%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::registration_set::Synced&gt;&gt; (991,008 samples, 0.73%)</title><rect x="51.8612%" y="405" width="0.7326%" height="15" fill="rgb(239,43,17)" fg:x="70156206" fg:w="991008"/><text x="52.1112%" y="415.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (991,008 samples, 0.73%)</title><rect x="51.8612%" y="389" width="0.7326%" height="15" fill="rgb(231,177,25)" fg:x="70156206" fg:w="991008"/><text x="52.1112%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (991,008 samples, 0.73%)</title><rect x="51.8612%" y="373" width="0.7326%" height="15" fill="rgb(219,179,1)" fg:x="70156206" fg:w="991008"/><text x="52.1112%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (991,008 samples, 0.73%)</title><rect x="51.8612%" y="357" width="0.7326%" height="15" fill="rgb(238,219,53)" fg:x="70156206" fg:w="991008"/><text x="52.1112%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (991,008 samples, 0.73%)</title><rect x="51.8612%" y="341" width="0.7326%" height="15" fill="rgb(232,167,36)" fg:x="70156206" fg:w="991008"/><text x="52.1112%" y="351.50"></text></g><g><title>mio::poll::Registry::deregister (509,363 samples, 0.38%)</title><rect x="52.5938%" y="421" width="0.3765%" height="15" fill="rgb(244,19,51)" fg:x="71147214" fg:w="509363"/><text x="52.8438%" y="431.50"></text></g><g><title>&lt;mio::net::tcp::stream::TcpStream as mio::event::source::Source&gt;::deregister (509,363 samples, 0.38%)</title><rect x="52.5938%" y="405" width="0.3765%" height="15" fill="rgb(224,6,22)" fg:x="71147214" fg:w="509363"/><text x="52.8438%" y="415.50"></text></g><g><title>&lt;mio::io_source::IoSource&lt;T&gt; as mio::event::source::Source&gt;::deregister (509,363 samples, 0.38%)</title><rect x="52.5938%" y="389" width="0.3765%" height="15" fill="rgb(224,145,5)" fg:x="71147214" fg:w="509363"/><text x="52.8438%" y="399.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::deregister (509,363 samples, 0.38%)</title><rect x="52.5938%" y="373" width="0.3765%" height="15" fill="rgb(234,130,49)" fg:x="71147214" fg:w="509363"/><text x="52.8438%" y="383.50"></text></g><g><title>mio::sys::unix::selector::Selector::deregister (509,363 samples, 0.38%)</title><rect x="52.5938%" y="357" width="0.3765%" height="15" fill="rgb(254,6,2)" fg:x="71147214" fg:w="509363"/><text x="52.8438%" y="367.50"></text></g><g><title>epoll_ctl (509,363 samples, 0.38%)</title><rect x="52.5938%" y="341" width="0.3765%" height="15" fill="rgb(208,96,46)" fg:x="71147214" fg:w="509363"/><text x="52.8438%" y="351.50"></text></g><g><title>tokio::runtime::io::driver::Handle::deregister_source (3,004,883 samples, 2.22%)</title><rect x="51.8612%" y="437" width="2.2213%" height="15" fill="rgb(239,3,39)" fg:x="70156206" fg:w="3004883"/><text x="52.1112%" y="447.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,504,512 samples, 1.11%)</title><rect x="52.9703%" y="421" width="1.1122%" height="15" fill="rgb(233,210,1)" fg:x="71656577" fg:w="1504512"/><text x="53.2203%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,504,512 samples, 1.11%)</title><rect x="52.9703%" y="405" width="1.1122%" height="15" fill="rgb(244,137,37)" fg:x="71656577" fg:w="1504512"/><text x="53.2203%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,504,512 samples, 1.11%)</title><rect x="52.9703%" y="389" width="1.1122%" height="15" fill="rgb(240,136,2)" fg:x="71656577" fg:w="1504512"/><text x="53.2203%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,504,512 samples, 1.11%)</title><rect x="52.9703%" y="373" width="1.1122%" height="15" fill="rgb(239,18,37)" fg:x="71656577" fg:w="1504512"/><text x="53.2203%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,504,512 samples, 1.11%)</title><rect x="52.9703%" y="357" width="1.1122%" height="15" fill="rgb(218,185,22)" fg:x="71656577" fg:w="1504512"/><text x="53.2203%" y="367.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::drop::Drop&gt;::drop (4,965,674 samples, 3.67%)</title><rect x="50.7560%" y="469" width="3.6708%" height="15" fill="rgb(225,218,4)" fg:x="68661131" fg:w="4965674"/><text x="51.0060%" y="479.50">&lt;tok..</text></g><g><title>tokio::runtime::io::registration::Registration::deregister (3,470,599 samples, 2.57%)</title><rect x="51.8612%" y="453" width="2.5656%" height="15" fill="rgb(230,182,32)" fg:x="70156206" fg:w="3470599"/><text x="52.1112%" y="463.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::handle (465,716 samples, 0.34%)</title><rect x="54.0825%" y="437" width="0.3443%" height="15" fill="rgb(242,56,43)" fg:x="73161089" fg:w="465716"/><text x="54.3325%" y="447.50"></text></g><g><title>tokio::runtime::driver::Handle::io (465,716 samples, 0.34%)</title><rect x="54.0825%" y="421" width="0.3443%" height="15" fill="rgb(233,99,24)" fg:x="73161089" fg:w="465716"/><text x="54.3325%" y="431.50"></text></g><g><title>tokio::runtime::driver::IoHandle::as_ref (465,716 samples, 0.34%)</title><rect x="54.0825%" y="405" width="0.3443%" height="15" fill="rgb(234,209,42)" fg:x="73161089" fg:w="465716"/><text x="54.3325%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (6,411,436 samples, 4.74%)</title><rect x="50.4287%" y="501" width="4.7395%" height="15" fill="rgb(227,7,12)" fg:x="68218377" fg:w="6411436"/><text x="50.6787%" y="511.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;&gt; (5,968,682 samples, 4.41%)</title><rect x="50.7560%" y="485" width="4.4122%" height="15" fill="rgb(245,203,43)" fg:x="68661131" fg:w="5968682"/><text x="51.0060%" y="495.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="469" width="0.7414%" height="15" fill="rgb(238,205,33)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="479.50"></text></g><g><title>&lt;tokio::runtime::io::registration::Registration as core::ops::drop::Drop&gt;::drop (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="453" width="0.7414%" height="15" fill="rgb(231,56,7)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="463.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_wakers (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="437" width="0.7414%" height="15" fill="rgb(244,186,29)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="447.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="421" width="0.7414%" height="15" fill="rgb(234,111,31)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="405" width="0.7414%" height="15" fill="rgb(241,149,10)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="389" width="0.7414%" height="15" fill="rgb(249,206,44)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="373" width="0.7414%" height="15" fill="rgb(251,153,30)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,003,008 samples, 0.74%)</title><rect x="54.4268%" y="357" width="0.7414%" height="15" fill="rgb(239,152,38)" fg:x="73626805" fg:w="1003008"/><text x="54.6768%" y="367.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (458,829 samples, 0.34%)</title><rect x="55.1682%" y="501" width="0.3392%" height="15" fill="rgb(249,139,47)" fg:x="74629813" fg:w="458829"/><text x="55.4182%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (458,829 samples, 0.34%)</title><rect x="55.1682%" y="485" width="0.3392%" height="15" fill="rgb(244,64,35)" fg:x="74629813" fg:w="458829"/><text x="55.4182%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (458,829 samples, 0.34%)</title><rect x="55.1682%" y="469" width="0.3392%" height="15" fill="rgb(216,46,15)" fg:x="74629813" fg:w="458829"/><text x="55.4182%" y="479.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (458,829 samples, 0.34%)</title><rect x="55.1682%" y="453" width="0.3392%" height="15" fill="rgb(250,74,19)" fg:x="74629813" fg:w="458829"/><text x="55.4182%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (458,829 samples, 0.34%)</title><rect x="55.1682%" y="437" width="0.3392%" height="15" fill="rgb(249,42,33)" fg:x="74629813" fg:w="458829"/><text x="55.4182%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (458,829 samples, 0.34%)</title><rect x="55.1682%" y="421" width="0.3392%" height="15" fill="rgb(242,149,17)" fg:x="74629813" fg:w="458829"/><text x="55.4182%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="55.5074%" y="485" width="0.3707%" height="15" fill="rgb(244,29,21)" fg:x="75088642" fg:w="501504"/><text x="55.7574%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="55.5074%" y="469" width="0.3707%" height="15" fill="rgb(220,130,37)" fg:x="75088642" fg:w="501504"/><text x="55.7574%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (989,732 samples, 0.73%)</title><rect x="55.8781%" y="485" width="0.7316%" height="15" fill="rgb(211,67,2)" fg:x="75590146" fg:w="989732"/><text x="56.1281%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (989,732 samples, 0.73%)</title><rect x="55.8781%" y="469" width="0.7316%" height="15" fill="rgb(235,68,52)" fg:x="75590146" fg:w="989732"/><text x="56.1281%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::park (987,239 samples, 0.73%)</title><rect x="56.6098%" y="485" width="0.7298%" height="15" fill="rgb(246,142,3)" fg:x="76579878" fg:w="987239"/><text x="56.8598%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (987,239 samples, 0.73%)</title><rect x="56.6098%" y="469" width="0.7298%" height="15" fill="rgb(241,25,7)" fg:x="76579878" fg:w="987239"/><text x="56.8598%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (485,735 samples, 0.36%)</title><rect x="56.9805%" y="453" width="0.3591%" height="15" fill="rgb(242,119,39)" fg:x="77081382" fg:w="485735"/><text x="57.2305%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (485,735 samples, 0.36%)</title><rect x="56.9805%" y="437" width="0.3591%" height="15" fill="rgb(241,98,45)" fg:x="77081382" fg:w="485735"/><text x="57.2305%" y="447.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow::{{closure}} (485,735 samples, 0.36%)</title><rect x="56.9805%" y="421" width="0.3591%" height="15" fill="rgb(254,28,30)" fg:x="77081382" fg:w="485735"/><text x="57.2305%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (485,735 samples, 0.36%)</title><rect x="56.9805%" y="405" width="0.3591%" height="15" fill="rgb(241,142,54)" fg:x="77081382" fg:w="485735"/><text x="57.2305%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (485,735 samples, 0.36%)</title><rect x="56.9805%" y="389" width="0.3591%" height="15" fill="rgb(222,85,15)" fg:x="77081382" fg:w="485735"/><text x="57.2305%" y="399.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4,940,999 samples, 3.65%)</title><rect x="55.5074%" y="501" width="3.6525%" height="15" fill="rgb(210,85,47)" fg:x="75088642" fg:w="4940999"/><text x="55.7574%" y="511.50">park..</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2,462,524 samples, 1.82%)</title><rect x="57.3396%" y="485" width="1.8204%" height="15" fill="rgb(224,206,25)" fg:x="77567117" fg:w="2462524"/><text x="57.5896%" y="495.50">p..</text></g><g><title>parking_lot_core::spinwait::cpu_relax (2,462,524 samples, 1.82%)</title><rect x="57.3396%" y="469" width="1.8204%" height="15" fill="rgb(243,201,19)" fg:x="77567117" fg:w="2462524"/><text x="57.5896%" y="479.50">p..</text></g><g><title>core::hint::spin_loop (2,462,524 samples, 1.82%)</title><rect x="57.3396%" y="453" width="1.8204%" height="15" fill="rgb(236,59,4)" fg:x="77567117" fg:w="2462524"/><text x="57.5896%" y="463.50">c..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2,462,524 samples, 1.82%)</title><rect x="57.3396%" y="437" width="1.8204%" height="15" fill="rgb(254,179,45)" fg:x="77567117" fg:w="2462524"/><text x="57.5896%" y="447.50">c..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports_with_progress::{{closure}}::{{closure}} (478,757 samples, 0.35%)</title><rect x="59.1599%" y="501" width="0.3539%" height="15" fill="rgb(226,14,10)" fg:x="80029641" fg:w="478757"/><text x="59.4099%" y="511.50"></text></g><g><title>[libc.so.6] (2,522,251 samples, 1.86%)</title><rect x="59.5138%" y="421" width="1.8645%" height="15" fill="rgb(244,27,41)" fg:x="80508398" fg:w="2522251"/><text x="59.7638%" y="431.50">[..</text></g><g><title>[libc.so.6] (1,017,739 samples, 0.75%)</title><rect x="60.6260%" y="405" width="0.7523%" height="15" fill="rgb(235,35,32)" fg:x="82012910" fg:w="1017739"/><text x="60.8760%" y="415.50"></text></g><g><title>[libc.so.6] (1,017,739 samples, 0.75%)</title><rect x="60.6260%" y="389" width="0.7523%" height="15" fill="rgb(218,68,31)" fg:x="82012910" fg:w="1017739"/><text x="60.8760%" y="399.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (3,023,932 samples, 2.24%)</title><rect x="59.5138%" y="501" width="2.2354%" height="15" fill="rgb(207,120,37)" fg:x="80508398" fg:w="3023932"/><text x="59.7638%" y="511.50">t..</text></g><g><title>tokio::runtime::io::driver::Handle::release_pending_registrations (3,023,932 samples, 2.24%)</title><rect x="59.5138%" y="485" width="2.2354%" height="15" fill="rgb(227,98,0)" fg:x="80508398" fg:w="3023932"/><text x="59.7638%" y="495.50">t..</text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::release (3,023,932 samples, 2.24%)</title><rect x="59.5138%" y="469" width="2.2354%" height="15" fill="rgb(207,7,3)" fg:x="80508398" fg:w="3023932"/><text x="59.7638%" y="479.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (3,023,932 samples, 2.24%)</title><rect x="59.5138%" y="453" width="2.2354%" height="15" fill="rgb(206,98,19)" fg:x="80508398" fg:w="3023932"/><text x="59.7638%" y="463.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,023,932 samples, 2.24%)</title><rect x="59.5138%" y="437" width="2.2354%" height="15" fill="rgb(217,5,26)" fg:x="80508398" fg:w="3023932"/><text x="59.7638%" y="447.50">&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (501,681 samples, 0.37%)</title><rect x="61.3783%" y="421" width="0.3709%" height="15" fill="rgb(235,190,38)" fg:x="83030649" fg:w="501681"/><text x="61.6283%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (501,681 samples, 0.37%)</title><rect x="61.3783%" y="405" width="0.3709%" height="15" fill="rgb(247,86,24)" fg:x="83030649" fg:w="501681"/><text x="61.6283%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (471,809 samples, 0.35%)</title><rect x="61.7492%" y="501" width="0.3488%" height="15" fill="rgb(205,101,16)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="511.50"></text></g><g><title>core::mem::drop (471,809 samples, 0.35%)</title><rect x="61.7492%" y="485" width="0.3488%" height="15" fill="rgb(246,168,33)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (471,809 samples, 0.35%)</title><rect x="61.7492%" y="469" width="0.3488%" height="15" fill="rgb(231,114,1)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (471,809 samples, 0.35%)</title><rect x="61.7492%" y="453" width="0.3488%" height="15" fill="rgb(207,184,53)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="463.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (471,809 samples, 0.35%)</title><rect x="61.7492%" y="437" width="0.3488%" height="15" fill="rgb(224,95,51)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (471,809 samples, 0.35%)</title><rect x="61.7492%" y="421" width="0.3488%" height="15" fill="rgb(212,188,45)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (471,809 samples, 0.35%)</title><rect x="61.7492%" y="405" width="0.3488%" height="15" fill="rgb(223,154,38)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (471,809 samples, 0.35%)</title><rect x="61.7492%" y="389" width="0.3488%" height="15" fill="rgb(251,22,52)" fg:x="83532330" fg:w="471809"/><text x="61.9992%" y="399.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (501,504 samples, 0.37%)</title><rect x="62.0980%" y="453" width="0.3707%" height="15" fill="rgb(229,209,22)" fg:x="84004139" fg:w="501504"/><text x="62.3480%" y="463.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (501,504 samples, 0.37%)</title><rect x="62.0980%" y="437" width="0.3707%" height="15" fill="rgb(234,138,34)" fg:x="84004139" fg:w="501504"/><text x="62.3480%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (501,504 samples, 0.37%)</title><rect x="62.0980%" y="421" width="0.3707%" height="15" fill="rgb(212,95,11)" fg:x="84004139" fg:w="501504"/><text x="62.3480%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (1,508,868 samples, 1.12%)</title><rect x="62.0980%" y="501" width="1.1154%" height="15" fill="rgb(240,179,47)" fg:x="84004139" fg:w="1508868"/><text x="62.3480%" y="511.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1,508,868 samples, 1.12%)</title><rect x="62.0980%" y="485" width="1.1154%" height="15" fill="rgb(240,163,11)" fg:x="84004139" fg:w="1508868"/><text x="62.3480%" y="495.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1,508,868 samples, 1.12%)</title><rect x="62.0980%" y="469" width="1.1154%" height="15" fill="rgb(236,37,12)" fg:x="84004139" fg:w="1508868"/><text x="62.3480%" y="479.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicUsize::decrement (1,007,364 samples, 0.74%)</title><rect x="62.4687%" y="453" width="0.7447%" height="15" fill="rgb(232,164,16)" fg:x="84505643" fg:w="1007364"/><text x="62.7187%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,007,364 samples, 0.74%)</title><rect x="62.4687%" y="437" width="0.7447%" height="15" fill="rgb(244,205,15)" fg:x="84505643" fg:w="1007364"/><text x="62.7187%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,007,364 samples, 0.74%)</title><rect x="62.4687%" y="421" width="0.7447%" height="15" fill="rgb(223,117,47)" fg:x="84505643" fg:w="1007364"/><text x="62.7187%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (501,504 samples, 0.37%)</title><rect x="63.2134%" y="501" width="0.3707%" height="15" fill="rgb(244,107,35)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (501,504 samples, 0.37%)</title><rect x="63.2134%" y="485" width="0.3707%" height="15" fill="rgb(205,140,8)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="495.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (501,504 samples, 0.37%)</title><rect x="63.2134%" y="469" width="0.3707%" height="15" fill="rgb(228,84,46)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="479.50"></text></g><g><title>core::mem::drop (501,504 samples, 0.37%)</title><rect x="63.2134%" y="453" width="0.3707%" height="15" fill="rgb(254,188,9)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (501,504 samples, 0.37%)</title><rect x="63.2134%" y="437" width="0.3707%" height="15" fill="rgb(206,112,54)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (501,504 samples, 0.37%)</title><rect x="63.2134%" y="421" width="0.3707%" height="15" fill="rgb(216,84,49)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.37%)</title><rect x="63.2134%" y="405" width="0.3707%" height="15" fill="rgb(214,194,35)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (501,504 samples, 0.37%)</title><rect x="63.2134%" y="389" width="0.3707%" height="15" fill="rgb(249,28,3)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (501,504 samples, 0.37%)</title><rect x="63.2134%" y="373" width="0.3707%" height="15" fill="rgb(222,56,52)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (501,504 samples, 0.37%)</title><rect x="63.2134%" y="357" width="0.3707%" height="15" fill="rgb(245,217,50)" fg:x="85513007" fg:w="501504"/><text x="63.4634%" y="367.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1,003,008 samples, 0.74%)</title><rect x="63.5841%" y="501" width="0.7414%" height="15" fill="rgb(213,201,24)" fg:x="86014511" fg:w="1003008"/><text x="63.8341%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1,003,008 samples, 0.74%)</title><rect x="63.5841%" y="485" width="0.7414%" height="15" fill="rgb(248,116,28)" fg:x="86014511" fg:w="1003008"/><text x="63.8341%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1,003,008 samples, 0.74%)</title><rect x="63.5841%" y="469" width="0.7414%" height="15" fill="rgb(219,72,43)" fg:x="86014511" fg:w="1003008"/><text x="63.8341%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,003,008 samples, 0.74%)</title><rect x="63.5841%" y="453" width="0.7414%" height="15" fill="rgb(209,138,14)" fg:x="86014511" fg:w="1003008"/><text x="63.8341%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,003,008 samples, 0.74%)</title><rect x="63.5841%" y="437" width="0.7414%" height="15" fill="rgb(222,18,33)" fg:x="86014511" fg:w="1003008"/><text x="63.8341%" y="447.50"></text></g><g><title>[unknown] (40,089,145 samples, 29.63%)</title><rect x="35.0562%" y="517" width="29.6349%" height="15" fill="rgb(213,199,7)" fg:x="47422915" fg:w="40089145"/><text x="35.3062%" y="527.50">[unknown]</text></g><g><title>tokio::runtime::time::entry::_::&lt;impl core::ops::drop::Drop for tokio::runtime::time::entry::TimerEntry&gt;::drop (494,541 samples, 0.37%)</title><rect x="64.3255%" y="501" width="0.3656%" height="15" fill="rgb(250,110,10)" fg:x="87017519" fg:w="494541"/><text x="64.5755%" y="511.50"></text></g><g><title>tokio::runtime::time::entry::_::&lt;impl core::ops::drop::Drop for tokio::runtime::time::entry::TimerEntry&gt;::drop::__drop_inner (494,541 samples, 0.37%)</title><rect x="64.3255%" y="485" width="0.3656%" height="15" fill="rgb(248,123,6)" fg:x="87017519" fg:w="494541"/><text x="64.5755%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (494,541 samples, 0.37%)</title><rect x="64.3255%" y="469" width="0.3656%" height="15" fill="rgb(206,91,31)" fg:x="87017519" fg:w="494541"/><text x="64.5755%" y="479.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (494,541 samples, 0.37%)</title><rect x="64.3255%" y="453" width="0.3656%" height="15" fill="rgb(211,154,13)" fg:x="87017519" fg:w="494541"/><text x="64.5755%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (494,541 samples, 0.37%)</title><rect x="64.3255%" y="437" width="0.3656%" height="15" fill="rgb(225,148,7)" fg:x="87017519" fg:w="494541"/><text x="64.5755%" y="447.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (447,776 samples, 0.33%)</title><rect x="64.6911%" y="501" width="0.3310%" height="15" fill="rgb(220,160,43)" fg:x="87512060" fg:w="447776"/><text x="64.9411%" y="511.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (447,776 samples, 0.33%)</title><rect x="64.6911%" y="485" width="0.3310%" height="15" fill="rgb(213,52,39)" fg:x="87512060" fg:w="447776"/><text x="64.9411%" y="495.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (447,776 samples, 0.33%)</title><rect x="64.6911%" y="469" width="0.3310%" height="15" fill="rgb(243,137,7)" fg:x="87512060" fg:w="447776"/><text x="64.9411%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (447,776 samples, 0.33%)</title><rect x="64.6911%" y="453" width="0.3310%" height="15" fill="rgb(230,79,13)" fg:x="87512060" fg:w="447776"/><text x="64.9411%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (447,776 samples, 0.33%)</title><rect x="64.6911%" y="437" width="0.3310%" height="15" fill="rgb(247,105,23)" fg:x="87512060" fg:w="447776"/><text x="64.9411%" y="447.50"></text></g><g><title>chrono::offset::utc::Utc::now (1,952,288 samples, 1.44%)</title><rect x="64.6911%" y="517" width="1.4432%" height="15" fill="rgb(223,179,41)" fg:x="87512060" fg:w="1952288"/><text x="64.9411%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,504,512 samples, 1.11%)</title><rect x="65.0221%" y="501" width="1.1122%" height="15" fill="rgb(218,9,34)" fg:x="87959836" fg:w="1504512"/><text x="65.2721%" y="511.50"></text></g><g><title>clock_gettime (1,504,512 samples, 1.11%)</title><rect x="65.0221%" y="485" width="1.1122%" height="15" fill="rgb(222,106,8)" fg:x="87959836" fg:w="1504512"/><text x="65.2721%" y="495.50"></text></g><g><title>__vdso_clock_gettime (501,504 samples, 0.37%)</title><rect x="65.7636%" y="469" width="0.3707%" height="15" fill="rgb(211,220,0)" fg:x="88962844" fg:w="501504"/><text x="66.0136%" y="479.50"></text></g><g><title>clock_gettime (685,981 samples, 0.51%)</title><rect x="66.1343%" y="517" width="0.5071%" height="15" fill="rgb(229,52,16)" fg:x="89464348" fg:w="685981"/><text x="66.3843%" y="527.50"></text></g><g><title>&lt;tokio::runtime::io::registration::Registration as core::ops::drop::Drop&gt;::drop (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="469" width="1.2311%" height="15" fill="rgb(212,155,18)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="479.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_wakers (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="453" width="1.2311%" height="15" fill="rgb(242,21,14)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="437" width="1.2311%" height="15" fill="rgb(222,19,48)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="421" width="1.2311%" height="15" fill="rgb(232,45,27)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="405" width="1.2311%" height="15" fill="rgb(249,103,42)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="389" width="1.2311%" height="15" fill="rgb(246,81,33)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="373" width="1.2311%" height="15" fill="rgb(252,33,42)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,665,373 samples, 1.23%)</title><rect x="66.6414%" y="357" width="1.2311%" height="15" fill="rgb(209,212,41)" fg:x="90150329" fg:w="1665373"/><text x="66.8914%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::tcp::stream::TcpStream&gt; (2,166,877 samples, 1.60%)</title><rect x="66.6414%" y="517" width="1.6018%" height="15" fill="rgb(207,154,6)" fg:x="90150329" fg:w="2166877"/><text x="66.8914%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::poll_evented::PollEvented&lt;mio::net::tcp::stream::TcpStream&gt;&gt; (2,166,877 samples, 1.60%)</title><rect x="66.6414%" y="501" width="1.6018%" height="15" fill="rgb(223,64,47)" fg:x="90150329" fg:w="2166877"/><text x="66.8914%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (2,166,877 samples, 1.60%)</title><rect x="66.6414%" y="485" width="1.6018%" height="15" fill="rgb(211,161,38)" fg:x="90150329" fg:w="2166877"/><text x="66.8914%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::io::scheduled_io::ScheduledIo&gt;&gt; (501,504 samples, 0.37%)</title><rect x="67.8725%" y="469" width="0.3707%" height="15" fill="rgb(219,138,40)" fg:x="91815702" fg:w="501504"/><text x="68.1225%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.37%)</title><rect x="67.8725%" y="453" width="0.3707%" height="15" fill="rgb(241,228,46)" fg:x="91815702" fg:w="501504"/><text x="68.1225%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (501,504 samples, 0.37%)</title><rect x="67.8725%" y="437" width="0.3707%" height="15" fill="rgb(223,209,38)" fg:x="91815702" fg:w="501504"/><text x="68.1225%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (501,504 samples, 0.37%)</title><rect x="67.8725%" y="421" width="0.3707%" height="15" fill="rgb(236,164,45)" fg:x="91815702" fg:w="501504"/><text x="68.1225%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;tokio::net::tcp::stream::TcpStream::connect&lt;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt;&gt; (501,504 samples, 0.37%)</title><rect x="68.2432%" y="517" width="0.3707%" height="15" fill="rgb(231,15,5)" fg:x="92317206" fg:w="501504"/><text x="68.4932%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (982,534 samples, 0.73%)</title><rect x="68.6139%" y="501" width="0.7263%" height="15" fill="rgb(252,35,15)" fg:x="92818710" fg:w="982534"/><text x="68.8639%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (982,534 samples, 0.73%)</title><rect x="68.6139%" y="485" width="0.7263%" height="15" fill="rgb(248,181,18)" fg:x="92818710" fg:w="982534"/><text x="68.8639%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (501,504 samples, 0.37%)</title><rect x="69.3402%" y="453" width="0.3707%" height="15" fill="rgb(233,39,42)" fg:x="93801244" fg:w="501504"/><text x="69.5902%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (501,504 samples, 0.37%)</title><rect x="69.3402%" y="437" width="0.3707%" height="15" fill="rgb(238,110,33)" fg:x="93801244" fg:w="501504"/><text x="69.5902%" y="447.50"></text></g><g><title>core::mem::replace (501,504 samples, 0.37%)</title><rect x="69.3402%" y="421" width="0.3707%" height="15" fill="rgb(233,195,10)" fg:x="93801244" fg:w="501504"/><text x="69.5902%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::park (1,003,008 samples, 0.74%)</title><rect x="69.3402%" y="501" width="0.7414%" height="15" fill="rgb(254,105,3)" fg:x="93801244" fg:w="1003008"/><text x="69.5902%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,003,008 samples, 0.74%)</title><rect x="69.3402%" y="485" width="0.7414%" height="15" fill="rgb(221,225,9)" fg:x="93801244" fg:w="1003008"/><text x="69.5902%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1,003,008 samples, 0.74%)</title><rect x="69.3402%" y="469" width="0.7414%" height="15" fill="rgb(224,227,45)" fg:x="93801244" fg:w="1003008"/><text x="69.5902%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (501,504 samples, 0.37%)</title><rect x="69.7110%" y="453" width="0.3707%" height="15" fill="rgb(229,198,43)" fg:x="94302748" fg:w="501504"/><text x="69.9610%" y="463.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (501,504 samples, 0.37%)</title><rect x="69.7110%" y="437" width="0.3707%" height="15" fill="rgb(206,209,35)" fg:x="94302748" fg:w="501504"/><text x="69.9610%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="69.7110%" y="421" width="0.3707%" height="15" fill="rgb(245,195,53)" fg:x="94302748" fg:w="501504"/><text x="69.9610%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="69.7110%" y="405" width="0.3707%" height="15" fill="rgb(240,92,26)" fg:x="94302748" fg:w="501504"/><text x="69.9610%" y="415.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2,568,428 samples, 1.90%)</title><rect x="68.6139%" y="517" width="1.8986%" height="15" fill="rgb(207,40,23)" fg:x="92818710" fg:w="2568428"/><text x="68.8639%" y="527.50">p..</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (582,886 samples, 0.43%)</title><rect x="70.0817%" y="501" width="0.4309%" height="15" fill="rgb(223,111,35)" fg:x="94804252" fg:w="582886"/><text x="70.3317%" y="511.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (582,886 samples, 0.43%)</title><rect x="70.0817%" y="485" width="0.4309%" height="15" fill="rgb(229,147,28)" fg:x="94804252" fg:w="582886"/><text x="70.3317%" y="495.50"></text></g><g><title>core::hint::spin_loop (582,886 samples, 0.43%)</title><rect x="70.0817%" y="469" width="0.4309%" height="15" fill="rgb(211,29,28)" fg:x="94804252" fg:w="582886"/><text x="70.3317%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (582,886 samples, 0.43%)</title><rect x="70.0817%" y="453" width="0.4309%" height="15" fill="rgb(228,72,33)" fg:x="94804252" fg:w="582886"/><text x="70.3317%" y="463.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (719,763 samples, 0.53%)</title><rect x="70.5126%" y="517" width="0.5321%" height="15" fill="rgb(205,214,31)" fg:x="95387138" fg:w="719763"/><text x="70.7626%" y="527.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (719,763 samples, 0.53%)</title><rect x="70.5126%" y="501" width="0.5321%" height="15" fill="rgb(224,111,15)" fg:x="95387138" fg:w="719763"/><text x="70.7626%" y="511.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (719,763 samples, 0.53%)</title><rect x="70.5126%" y="485" width="0.5321%" height="15" fill="rgb(253,21,26)" fg:x="95387138" fg:w="719763"/><text x="70.7626%" y="495.50"></text></g><g><title>core::hint::spin_loop (719,763 samples, 0.53%)</title><rect x="70.5126%" y="469" width="0.5321%" height="15" fill="rgb(245,139,43)" fg:x="95387138" fg:w="719763"/><text x="70.7626%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (719,763 samples, 0.53%)</title><rect x="70.5126%" y="453" width="0.5321%" height="15" fill="rgb(252,170,7)" fg:x="95387138" fg:w="719763"/><text x="70.7626%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (960,549 samples, 0.71%)</title><rect x="71.0446%" y="501" width="0.7101%" height="15" fill="rgb(231,118,14)" fg:x="96106901" fg:w="960549"/><text x="71.2946%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (960,549 samples, 0.71%)</title><rect x="71.0446%" y="485" width="0.7101%" height="15" fill="rgb(238,83,0)" fg:x="96106901" fg:w="960549"/><text x="71.2946%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="72.1079%" y="485" width="0.3707%" height="15" fill="rgb(221,39,39)" fg:x="97545210" fg:w="501504"/><text x="72.3579%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="72.1079%" y="469" width="0.3707%" height="15" fill="rgb(222,119,46)" fg:x="97545210" fg:w="501504"/><text x="72.3579%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1,003,008 samples, 0.74%)</title><rect x="72.4786%" y="485" width="0.7414%" height="15" fill="rgb(222,165,49)" fg:x="98046714" fg:w="1003008"/><text x="72.7286%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_or (1,003,008 samples, 0.74%)</title><rect x="72.4786%" y="469" width="0.7414%" height="15" fill="rgb(219,113,52)" fg:x="98046714" fg:w="1003008"/><text x="72.7286%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,041,423 samples, 0.77%)</title><rect x="73.2200%" y="485" width="0.7698%" height="15" fill="rgb(214,7,15)" fg:x="99049722" fg:w="1041423"/><text x="73.4700%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1,041,423 samples, 0.77%)</title><rect x="73.2200%" y="469" width="0.7698%" height="15" fill="rgb(235,32,4)" fg:x="99049722" fg:w="1041423"/><text x="73.4700%" y="479.50"></text></g><g><title>crossbeam_queue::seg_queue::Block&lt;T&gt;::new (1,972,777 samples, 1.46%)</title><rect x="73.9899%" y="485" width="1.4583%" height="15" fill="rgb(238,90,54)" fg:x="100091145" fg:w="1972777"/><text x="74.2399%" y="495.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,972,777 samples, 1.46%)</title><rect x="73.9899%" y="469" width="1.4583%" height="15" fill="rgb(213,208,19)" fg:x="100091145" fg:w="1972777"/><text x="74.2399%" y="479.50"></text></g><g><title>[libc.so.6] (1,464,456 samples, 1.08%)</title><rect x="74.3656%" y="453" width="1.0826%" height="15" fill="rgb(233,156,4)" fg:x="100599466" fg:w="1464456"/><text x="74.6156%" y="463.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="75.0775%" y="437" width="0.3707%" height="15" fill="rgb(207,194,5)" fg:x="101562418" fg:w="501504"/><text x="75.3275%" y="447.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.37%)</title><rect x="75.0775%" y="421" width="0.3707%" height="15" fill="rgb(206,111,30)" fg:x="101562418" fg:w="501504"/><text x="75.3275%" y="431.50"></text></g><g><title>prtip_scanner::lockfree_aggregator::LockFreeAggregator::push (6,458,525 samples, 4.77%)</title><rect x="71.0446%" y="517" width="4.7743%" height="15" fill="rgb(243,70,54)" fg:x="96106901" fg:w="6458525"/><text x="71.2946%" y="527.50">prtip_..</text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (5,497,976 samples, 4.06%)</title><rect x="71.7547%" y="501" width="4.0642%" height="15" fill="rgb(242,28,8)" fg:x="97067450" fg:w="5497976"/><text x="72.0047%" y="511.50">cros..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (501,504 samples, 0.37%)</title><rect x="75.4482%" y="485" width="0.3707%" height="15" fill="rgb(219,106,18)" fg:x="102063922" fg:w="501504"/><text x="75.6982%" y="495.50"></text></g><g><title>core::hint::spin_loop (501,504 samples, 0.37%)</title><rect x="75.4482%" y="469" width="0.3707%" height="15" fill="rgb(244,222,10)" fg:x="102063922" fg:w="501504"/><text x="75.6982%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (501,504 samples, 0.37%)</title><rect x="75.4482%" y="453" width="0.3707%" height="15" fill="rgb(236,179,52)" fg:x="102063922" fg:w="501504"/><text x="75.6982%" y="463.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (466,956 samples, 0.35%)</title><rect x="78.3309%" y="469" width="0.3452%" height="15" fill="rgb(213,23,39)" fg:x="105963480" fg:w="466956"/><text x="78.5809%" y="479.50"></text></g><g><title>[libc.so.6] (466,956 samples, 0.35%)</title><rect x="78.3309%" y="453" width="0.3452%" height="15" fill="rgb(238,48,10)" fg:x="105963480" fg:w="466956"/><text x="78.5809%" y="463.50"></text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::attempt_connect::{{closure}} (3,454,745 samples, 2.55%)</title><rect x="76.4929%" y="485" width="2.5538%" height="15" fill="rgb(251,196,23)" fg:x="103477195" fg:w="3454745"/><text x="76.7429%" y="495.50">pr..</text></g><g><title>tokio::time::timeout::timeout (501,504 samples, 0.37%)</title><rect x="78.6760%" y="469" width="0.3707%" height="15" fill="rgb(250,152,24)" fg:x="106430436" fg:w="501504"/><text x="78.9260%" y="479.50"></text></g><g><title>tokio::time::instant::Instant::now (501,504 samples, 0.37%)</title><rect x="78.6760%" y="453" width="0.3707%" height="15" fill="rgb(209,150,17)" fg:x="106430436" fg:w="501504"/><text x="78.9260%" y="463.50"></text></g><g><title>tokio::time::instant::variant::now (501,504 samples, 0.37%)</title><rect x="78.6760%" y="437" width="0.3707%" height="15" fill="rgb(234,202,34)" fg:x="106430436" fg:w="501504"/><text x="78.9260%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (501,504 samples, 0.37%)</title><rect x="78.6760%" y="421" width="0.3707%" height="15" fill="rgb(253,148,53)" fg:x="106430436" fg:w="501504"/><text x="78.9260%" y="431.50"></text></g><g><title>clock_gettime (501,504 samples, 0.37%)</title><rect x="78.6760%" y="405" width="0.3707%" height="15" fill="rgb(218,129,16)" fg:x="106430436" fg:w="501504"/><text x="78.9260%" y="415.50"></text></g><g><title>__vdso_clock_gettime (501,504 samples, 0.37%)</title><rect x="78.6760%" y="389" width="0.3707%" height="15" fill="rgb(216,85,19)" fg:x="106430436" fg:w="501504"/><text x="78.9260%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,003,008 samples, 0.74%)</title><rect x="79.0468%" y="485" width="0.7414%" height="15" fill="rgb(235,228,7)" fg:x="106931940" fg:w="1003008"/><text x="79.2968%" y="495.50"></text></g><g><title>clock_gettime (1,003,008 samples, 0.74%)</title><rect x="79.0468%" y="469" width="0.7414%" height="15" fill="rgb(245,175,0)" fg:x="106931940" fg:w="1003008"/><text x="79.2968%" y="479.50"></text></g><g><title>__vdso_clock_gettime (1,003,008 samples, 0.74%)</title><rect x="79.0468%" y="453" width="0.7414%" height="15" fill="rgb(208,168,36)" fg:x="106931940" fg:w="1003008"/><text x="79.2968%" y="463.50"></text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports_with_progress::{{closure}}::{{closure}} (5,941,081 samples, 4.39%)</title><rect x="75.8189%" y="517" width="4.3918%" height="15" fill="rgb(246,171,24)" fg:x="102565426" fg:w="5941081"/><text x="76.0689%" y="527.50">prtip..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_port::{{closure}} (5,029,312 samples, 3.72%)</title><rect x="76.4929%" y="501" width="3.7178%" height="15" fill="rgb(215,142,24)" fg:x="103477195" fg:w="5029312"/><text x="76.7429%" y="511.50">prti..</text></g><g><title>tracing_core::metadata::LevelFilter::current (571,559 samples, 0.42%)</title><rect x="79.7882%" y="485" width="0.4225%" height="15" fill="rgb(250,187,7)" fg:x="107934948" fg:w="571559"/><text x="80.0382%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (571,559 samples, 0.42%)</title><rect x="79.7882%" y="469" width="0.4225%" height="15" fill="rgb(228,66,33)" fg:x="107934948" fg:w="571559"/><text x="80.0382%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (571,559 samples, 0.42%)</title><rect x="79.7882%" y="453" width="0.4225%" height="15" fill="rgb(234,215,21)" fg:x="107934948" fg:w="571559"/><text x="80.0382%" y="463.50"></text></g><g><title>std::sys::thread_local::native::lazy::destroy (501,504 samples, 0.37%)</title><rect x="80.2107%" y="517" width="0.3707%" height="15" fill="rgb(222,191,20)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="527.50"></text></g><g><title>std::sys::thread_local::abort_on_dtor_unwind (501,504 samples, 0.37%)</title><rect x="80.2107%" y="501" width="0.3707%" height="15" fill="rgb(245,79,54)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="511.50"></text></g><g><title>std::sys::thread_local::native::lazy::destroy::{{closure}} (501,504 samples, 0.37%)</title><rect x="80.2107%" y="485" width="0.3707%" height="15" fill="rgb(240,10,37)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (501,504 samples, 0.37%)</title><rect x="80.2107%" y="469" width="0.3707%" height="15" fill="rgb(214,192,32)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking_lot_core::parking_lot::ThreadData&gt; (501,504 samples, 0.37%)</title><rect x="80.2107%" y="453" width="0.3707%" height="15" fill="rgb(209,36,54)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="463.50"></text></g><g><title>&lt;parking_lot_core::parking_lot::ThreadData as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.37%)</title><rect x="80.2107%" y="437" width="0.3707%" height="15" fill="rgb(220,10,11)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (501,504 samples, 0.37%)</title><rect x="80.2107%" y="421" width="0.3707%" height="15" fill="rgb(221,106,17)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (501,504 samples, 0.37%)</title><rect x="80.2107%" y="405" width="0.3707%" height="15" fill="rgb(251,142,44)" fg:x="108506507" fg:w="501504"/><text x="80.4607%" y="415.50"></text></g><g><title>mio::poll::Poll::poll (464,815 samples, 0.34%)</title><rect x="80.5814%" y="501" width="0.3436%" height="15" fill="rgb(238,13,15)" fg:x="109008011" fg:w="464815"/><text x="80.8314%" y="511.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (464,815 samples, 0.34%)</title><rect x="80.5814%" y="485" width="0.3436%" height="15" fill="rgb(208,107,27)" fg:x="109008011" fg:w="464815"/><text x="80.8314%" y="495.50"></text></g><g><title>epoll_wait (464,815 samples, 0.34%)</title><rect x="80.5814%" y="469" width="0.3436%" height="15" fill="rgb(205,136,37)" fg:x="109008011" fg:w="464815"/><text x="80.8314%" y="479.50"></text></g><g><title>[libc.so.6] (464,815 samples, 0.34%)</title><rect x="80.5814%" y="453" width="0.3436%" height="15" fill="rgb(250,205,27)" fg:x="109008011" fg:w="464815"/><text x="80.8314%" y="463.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1,467,823 samples, 1.09%)</title><rect x="80.5814%" y="517" width="1.0851%" height="15" fill="rgb(210,80,43)" fg:x="109008011" fg:w="1467823"/><text x="80.8314%" y="527.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (1,003,008 samples, 0.74%)</title><rect x="80.9251%" y="501" width="0.7414%" height="15" fill="rgb(247,160,36)" fg:x="109472826" fg:w="1003008"/><text x="81.1751%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (1,003,008 samples, 0.74%)</title><rect x="80.9251%" y="485" width="0.7414%" height="15" fill="rgb(234,13,49)" fg:x="109472826" fg:w="1003008"/><text x="81.1751%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,003,008 samples, 0.74%)</title><rect x="80.9251%" y="469" width="0.7414%" height="15" fill="rgb(234,122,0)" fg:x="109472826" fg:w="1003008"/><text x="81.1751%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (1,003,008 samples, 0.74%)</title><rect x="80.9251%" y="453" width="0.7414%" height="15" fill="rgb(207,146,38)" fg:x="109472826" fg:w="1003008"/><text x="81.1751%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (501,504 samples, 0.37%)</title><rect x="81.6665%" y="517" width="0.3707%" height="15" fill="rgb(207,177,25)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="527.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (501,504 samples, 0.37%)</title><rect x="81.6665%" y="501" width="0.3707%" height="15" fill="rgb(211,178,42)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="511.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (501,504 samples, 0.37%)</title><rect x="81.6665%" y="485" width="0.3707%" height="15" fill="rgb(230,69,54)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="495.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (501,504 samples, 0.37%)</title><rect x="81.6665%" y="469" width="0.3707%" height="15" fill="rgb(214,135,41)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="479.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (501,504 samples, 0.37%)</title><rect x="81.6665%" y="453" width="0.3707%" height="15" fill="rgb(237,67,25)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="463.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (501,504 samples, 0.37%)</title><rect x="81.6665%" y="437" width="0.3707%" height="15" fill="rgb(222,189,50)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (501,504 samples, 0.37%)</title><rect x="81.6665%" y="421" width="0.3707%" height="15" fill="rgb(245,148,34)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="81.6665%" y="405" width="0.3707%" height="15" fill="rgb(222,29,6)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="81.6665%" y="389" width="0.3707%" height="15" fill="rgb(221,189,43)" fg:x="110475834" fg:w="501504"/><text x="81.9165%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (495,415 samples, 0.37%)</title><rect x="82.4079%" y="453" width="0.3662%" height="15" fill="rgb(207,36,27)" fg:x="111478842" fg:w="495415"/><text x="82.6579%" y="463.50"></text></g><g><title>core::mem::replace (495,415 samples, 0.37%)</title><rect x="82.4079%" y="437" width="0.3662%" height="15" fill="rgb(217,90,24)" fg:x="111478842" fg:w="495415"/><text x="82.6579%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (501,504 samples, 0.37%)</title><rect x="82.7742%" y="453" width="0.3707%" height="15" fill="rgb(224,66,35)" fg:x="111974257" fg:w="501504"/><text x="83.0242%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (501,504 samples, 0.37%)</title><rect x="82.7742%" y="437" width="0.3707%" height="15" fill="rgb(221,13,50)" fg:x="111974257" fg:w="501504"/><text x="83.0242%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (501,504 samples, 0.37%)</title><rect x="82.7742%" y="421" width="0.3707%" height="15" fill="rgb(236,68,49)" fg:x="111974257" fg:w="501504"/><text x="83.0242%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (501,504 samples, 0.37%)</title><rect x="82.7742%" y="405" width="0.3707%" height="15" fill="rgb(229,146,28)" fg:x="111974257" fg:w="501504"/><text x="83.0242%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,999,927 samples, 1.48%)</title><rect x="82.0372%" y="517" width="1.4784%" height="15" fill="rgb(225,31,38)" fg:x="110977338" fg:w="1999927"/><text x="82.2872%" y="527.50"></text></g><g><title>tokio::task::coop::budget (1,498,423 samples, 1.11%)</title><rect x="82.4079%" y="501" width="1.1077%" height="15" fill="rgb(250,208,3)" fg:x="111478842" fg:w="1498423"/><text x="82.6579%" y="511.50"></text></g><g><title>tokio::task::coop::with_budget (1,498,423 samples, 1.11%)</title><rect x="82.4079%" y="485" width="1.1077%" height="15" fill="rgb(246,54,23)" fg:x="111478842" fg:w="1498423"/><text x="82.6579%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (1,498,423 samples, 1.11%)</title><rect x="82.4079%" y="469" width="1.1077%" height="15" fill="rgb(243,76,11)" fg:x="111478842" fg:w="1498423"/><text x="82.6579%" y="479.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (501,504 samples, 0.37%)</title><rect x="83.1449%" y="453" width="0.3707%" height="15" fill="rgb(245,21,50)" fg:x="112475761" fg:w="501504"/><text x="83.3949%" y="463.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (501,504 samples, 0.37%)</title><rect x="83.1449%" y="437" width="0.3707%" height="15" fill="rgb(228,9,43)" fg:x="112475761" fg:w="501504"/><text x="83.3949%" y="447.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (961,874 samples, 0.71%)</title><rect x="83.5156%" y="517" width="0.7110%" height="15" fill="rgb(208,100,47)" fg:x="112977265" fg:w="961874"/><text x="83.7656%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (961,874 samples, 0.71%)</title><rect x="83.5156%" y="501" width="0.7110%" height="15" fill="rgb(232,26,8)" fg:x="112977265" fg:w="961874"/><text x="83.7656%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (961,874 samples, 0.71%)</title><rect x="83.5156%" y="485" width="0.7110%" height="15" fill="rgb(216,166,38)" fg:x="112977265" fg:w="961874"/><text x="83.7656%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_xor (961,874 samples, 0.71%)</title><rect x="83.5156%" y="469" width="0.7110%" height="15" fill="rgb(251,202,51)" fg:x="112977265" fg:w="961874"/><text x="83.7656%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (501,504 samples, 0.37%)</title><rect x="85.0231%" y="485" width="0.3707%" height="15" fill="rgb(254,216,34)" fg:x="115016473" fg:w="501504"/><text x="85.2731%" y="495.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (991,896 samples, 0.73%)</title><rect x="86.8285%" y="117" width="0.7332%" height="15" fill="rgb(251,32,27)" fg:x="117458879" fg:w="991896"/><text x="87.0785%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (991,896 samples, 0.73%)</title><rect x="86.8285%" y="101" width="0.7332%" height="15" fill="rgb(208,127,28)" fg:x="117458879" fg:w="991896"/><text x="87.0785%" y="111.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next (991,896 samples, 0.73%)</title><rect x="86.8285%" y="85" width="0.7332%" height="15" fill="rgb(224,137,22)" fg:x="117458879" fg:w="991896"/><text x="87.0785%" y="95.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (991,896 samples, 0.73%)</title><rect x="86.8285%" y="69" width="0.7332%" height="15" fill="rgb(254,70,32)" fg:x="117458879" fg:w="991896"/><text x="87.0785%" y="79.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::get_queue_next::{{closure}} (991,896 samples, 0.73%)</title><rect x="86.8285%" y="53" width="0.7332%" height="15" fill="rgb(229,75,37)" fg:x="117458879" fg:w="991896"/><text x="87.0785%" y="63.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (501,504 samples, 0.37%)</title><rect x="87.5618%" y="117" width="0.3707%" height="15" fill="rgb(252,64,23)" fg:x="118450775" fg:w="501504"/><text x="87.8118%" y="127.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (501,504 samples, 0.37%)</title><rect x="87.5618%" y="101" width="0.3707%" height="15" fill="rgb(232,162,48)" fg:x="118450775" fg:w="501504"/><text x="87.8118%" y="111.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (501,504 samples, 0.37%)</title><rect x="87.5618%" y="85" width="0.3707%" height="15" fill="rgb(246,160,12)" fg:x="118450775" fg:w="501504"/><text x="87.8118%" y="95.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="87.5618%" y="69" width="0.3707%" height="15" fill="rgb(247,166,0)" fg:x="118450775" fg:w="501504"/><text x="87.8118%" y="79.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (501,504 samples, 0.37%)</title><rect x="87.5618%" y="53" width="0.3707%" height="15" fill="rgb(249,219,21)" fg:x="118450775" fg:w="501504"/><text x="87.8118%" y="63.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (2,997,912 samples, 2.22%)</title><rect x="86.4578%" y="133" width="2.2161%" height="15" fill="rgb(205,209,3)" fg:x="116957375" fg:w="2997912"/><text x="86.7078%" y="143.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1,003,008 samples, 0.74%)</title><rect x="87.9325%" y="117" width="0.7414%" height="15" fill="rgb(243,44,1)" fg:x="118952279" fg:w="1003008"/><text x="88.1825%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,003,008 samples, 0.74%)</title><rect x="87.9325%" y="101" width="0.7414%" height="15" fill="rgb(206,159,16)" fg:x="118952279" fg:w="1003008"/><text x="88.1825%" y="111.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (1,003,008 samples, 0.74%)</title><rect x="87.9325%" y="85" width="0.7414%" height="15" fill="rgb(244,77,30)" fg:x="118952279" fg:w="1003008"/><text x="88.1825%" y="95.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1,003,008 samples, 0.74%)</title><rect x="87.9325%" y="69" width="0.7414%" height="15" fill="rgb(218,69,12)" fg:x="118952279" fg:w="1003008"/><text x="88.1825%" y="79.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (501,504 samples, 0.37%)</title><rect x="88.3032%" y="53" width="0.3707%" height="15" fill="rgb(212,87,7)" fg:x="119453783" fg:w="501504"/><text x="88.5532%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_load (501,504 samples, 0.37%)</title><rect x="88.3032%" y="37" width="0.3707%" height="15" fill="rgb(245,114,25)" fg:x="119453783" fg:w="501504"/><text x="88.5532%" y="47.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="325" width="2.9292%" height="15" fill="rgb(210,61,42)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="335.50">&lt;t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="309" width="2.9292%" height="15" fill="rgb(211,52,33)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="319.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="293" width="2.9292%" height="15" fill="rgb(234,58,33)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="303.50">to..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="277" width="2.9292%" height="15" fill="rgb(220,115,36)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="287.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="261" width="2.9292%" height="15" fill="rgb(243,153,54)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="271.50">to..</text></g><g><title>tokio::runtime::context::set_scheduler (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="245" width="2.9292%" height="15" fill="rgb(251,47,18)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="255.50">to..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="229" width="2.9292%" height="15" fill="rgb(242,102,42)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="239.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="213" width="2.9292%" height="15" fill="rgb(234,31,38)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="223.50">st..</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="197" width="2.9292%" height="15" fill="rgb(221,117,51)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="207.50">to..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="181" width="2.9292%" height="15" fill="rgb(212,20,18)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="191.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="165" width="2.9292%" height="15" fill="rgb(245,133,36)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="175.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (3,962,464 samples, 2.93%)</title><rect x="86.4578%" y="149" width="2.9292%" height="15" fill="rgb(212,6,19)" fg:x="116957375" fg:w="3962464"/><text x="86.7078%" y="159.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (964,552 samples, 0.71%)</title><rect x="88.6739%" y="133" width="0.7130%" height="15" fill="rgb(218,1,36)" fg:x="119955287" fg:w="964552"/><text x="88.9239%" y="143.50"></text></g><g><title>core::mem::drop (509,079 samples, 0.38%)</title><rect x="89.3870%" y="309" width="0.3763%" height="15" fill="rgb(246,84,54)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::semaphore::OwnedSemaphorePermit&gt; (509,079 samples, 0.38%)</title><rect x="89.3870%" y="293" width="0.3763%" height="15" fill="rgb(242,110,6)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="303.50"></text></g><g><title>&lt;tokio::sync::semaphore::OwnedSemaphorePermit as core::ops::drop::Drop&gt;::drop (509,079 samples, 0.38%)</title><rect x="89.3870%" y="277" width="0.3763%" height="15" fill="rgb(214,47,5)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="287.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::add_permits (509,079 samples, 0.38%)</title><rect x="89.3870%" y="261" width="0.3763%" height="15" fill="rgb(218,159,25)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="271.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (509,079 samples, 0.38%)</title><rect x="89.3870%" y="245" width="0.3763%" height="15" fill="rgb(215,211,28)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="255.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (509,079 samples, 0.38%)</title><rect x="89.3870%" y="229" width="0.3763%" height="15" fill="rgb(238,59,32)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="239.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (509,079 samples, 0.38%)</title><rect x="89.3870%" y="213" width="0.3763%" height="15" fill="rgb(226,82,3)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="223.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (509,079 samples, 0.38%)</title><rect x="89.3870%" y="197" width="0.3763%" height="15" fill="rgb(240,164,32)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (509,079 samples, 0.38%)</title><rect x="89.3870%" y="181" width="0.3763%" height="15" fill="rgb(232,46,7)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (509,079 samples, 0.38%)</title><rect x="89.3870%" y="165" width="0.3763%" height="15" fill="rgb(229,129,53)" fg:x="120919839" fg:w="509079"/><text x="89.6370%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;prtip_scanner::lockfree_aggregator::LockFreeAggregator&gt;&gt; (501,504 samples, 0.37%)</title><rect x="89.7633%" y="309" width="0.3707%" height="15" fill="rgb(234,188,29)" fg:x="121428918" fg:w="501504"/><text x="90.0133%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.37%)</title><rect x="89.7633%" y="293" width="0.3707%" height="15" fill="rgb(246,141,4)" fg:x="121428918" fg:w="501504"/><text x="90.0133%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (501,504 samples, 0.37%)</title><rect x="89.7633%" y="277" width="0.3707%" height="15" fill="rgb(229,23,39)" fg:x="121428918" fg:w="501504"/><text x="90.0133%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (501,504 samples, 0.37%)</title><rect x="89.7633%" y="261" width="0.3707%" height="15" fill="rgb(206,12,3)" fg:x="121428918" fg:w="501504"/><text x="90.0133%" y="271.50"></text></g><g><title>prtip_core::types::ScanResult::with_response_time (476,326 samples, 0.35%)</title><rect x="90.1340%" y="293" width="0.3521%" height="15" fill="rgb(252,226,20)" fg:x="121930422" fg:w="476326"/><text x="90.3840%" y="303.50"></text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::attempt_connect::{{closure}} (960,141 samples, 0.71%)</title><rect x="90.4861%" y="293" width="0.7098%" height="15" fill="rgb(216,123,35)" fg:x="122406748" fg:w="960141"/><text x="90.7361%" y="303.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (501,504 samples, 0.37%)</title><rect x="91.1959%" y="293" width="0.3707%" height="15" fill="rgb(212,68,40)" fg:x="123366889" fg:w="501504"/><text x="91.4459%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (8,851,920 samples, 6.54%)</title><rect x="85.7645%" y="469" width="6.5436%" height="15" fill="rgb(254,125,32)" fg:x="116019481" fg:w="8851920"/><text x="86.0145%" y="479.50">tokio::ru..</text></g><g><title>std::panic::catch_unwind (8,851,920 samples, 6.54%)</title><rect x="85.7645%" y="453" width="6.5436%" height="15" fill="rgb(253,97,22)" fg:x="116019481" fg:w="8851920"/><text x="86.0145%" y="463.50">std::pani..</text></g><g><title>std::panicking::catch_unwind (8,851,920 samples, 6.54%)</title><rect x="85.7645%" y="437" width="6.5436%" height="15" fill="rgb(241,101,14)" fg:x="116019481" fg:w="8851920"/><text x="86.0145%" y="447.50">std::pani..</text></g><g><title>std::panicking::catch_unwind::do_call (8,851,920 samples, 6.54%)</title><rect x="85.7645%" y="421" width="6.5436%" height="15" fill="rgb(238,103,29)" fg:x="116019481" fg:w="8851920"/><text x="86.0145%" y="431.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8,410,981 samples, 6.22%)</title><rect x="86.0905%" y="405" width="6.2176%" height="15" fill="rgb(233,195,47)" fg:x="116460420" fg:w="8410981"/><text x="86.3405%" y="415.50">&lt;core::p..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (8,410,981 samples, 6.22%)</title><rect x="86.0905%" y="389" width="6.2176%" height="15" fill="rgb(246,218,30)" fg:x="116460420" fg:w="8410981"/><text x="86.3405%" y="399.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (8,410,981 samples, 6.22%)</title><rect x="86.0905%" y="373" width="6.2176%" height="15" fill="rgb(219,145,47)" fg:x="116460420" fg:w="8410981"/><text x="86.3405%" y="383.50">tokio::r..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8,410,981 samples, 6.22%)</title><rect x="86.0905%" y="357" width="6.2176%" height="15" fill="rgb(243,12,26)" fg:x="116460420" fg:w="8410981"/><text x="86.3405%" y="367.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (8,410,981 samples, 6.22%)</title><rect x="86.0905%" y="341" width="6.2176%" height="15" fill="rgb(214,87,16)" fg:x="116460420" fg:w="8410981"/><text x="86.3405%" y="351.50">tokio::r..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_ports_with_progress::{{closure}}::{{closure}} (3,951,562 samples, 2.92%)</title><rect x="89.3870%" y="325" width="2.9211%" height="15" fill="rgb(208,99,42)" fg:x="120919839" fg:w="3951562"/><text x="89.6370%" y="335.50">pr..</text></g><g><title>prtip_scanner::tcp_connect::TcpConnectScanner::scan_port::{{closure}} (2,940,979 samples, 2.17%)</title><rect x="90.1340%" y="309" width="2.1740%" height="15" fill="rgb(253,99,2)" fg:x="121930422" fg:w="2940979"/><text x="90.3840%" y="319.50">p..</text></g><g><title>std::time::Instant::elapsed (1,003,008 samples, 0.74%)</title><rect x="91.5666%" y="293" width="0.7414%" height="15" fill="rgb(220,168,23)" fg:x="123868393" fg:w="1003008"/><text x="91.8166%" y="303.50"></text></g><g><title>std::time::Instant::now (1,003,008 samples, 0.74%)</title><rect x="91.5666%" y="277" width="0.7414%" height="15" fill="rgb(242,38,24)" fg:x="123868393" fg:w="1003008"/><text x="91.8166%" y="287.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1,003,008 samples, 0.74%)</title><rect x="91.5666%" y="261" width="0.7414%" height="15" fill="rgb(225,182,9)" fg:x="123868393" fg:w="1003008"/><text x="91.8166%" y="271.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,003,008 samples, 0.74%)</title><rect x="91.5666%" y="245" width="0.7414%" height="15" fill="rgb(243,178,37)" fg:x="123868393" fg:w="1003008"/><text x="91.8166%" y="255.50"></text></g><g><title>clock_gettime (501,504 samples, 0.37%)</title><rect x="91.9373%" y="229" width="0.3707%" height="15" fill="rgb(232,139,19)" fg:x="124369897" fg:w="501504"/><text x="92.1873%" y="239.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (501,504 samples, 0.37%)</title><rect x="92.3081%" y="469" width="0.3707%" height="15" fill="rgb(225,201,24)" fg:x="124871401" fg:w="501504"/><text x="92.5581%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (501,504 samples, 0.37%)</title><rect x="92.3081%" y="453" width="0.3707%" height="15" fill="rgb(221,47,46)" fg:x="124871401" fg:w="501504"/><text x="92.5581%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (501,504 samples, 0.37%)</title><rect x="92.3081%" y="437" width="0.3707%" height="15" fill="rgb(249,23,13)" fg:x="124871401" fg:w="501504"/><text x="92.5581%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (501,504 samples, 0.37%)</title><rect x="92.3081%" y="421" width="0.3707%" height="15" fill="rgb(219,9,5)" fg:x="124871401" fg:w="501504"/><text x="92.5581%" y="431.50"></text></g><g><title>tokio::runtime::task::raw::poll (11,935,270 samples, 8.82%)</title><rect x="84.2267%" y="517" width="8.8229%" height="15" fill="rgb(254,171,16)" fg:x="113939139" fg:w="11935270"/><text x="84.4767%" y="527.50">tokio::runti..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,857,936 samples, 8.03%)</title><rect x="85.0231%" y="501" width="8.0265%" height="15" fill="rgb(230,171,20)" fg:x="115016473" fg:w="10857936"/><text x="85.2731%" y="511.50">tokio::runt..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (10,356,432 samples, 7.66%)</title><rect x="85.3938%" y="485" width="7.6557%" height="15" fill="rgb(210,71,41)" fg:x="115517977" fg:w="10356432"/><text x="85.6438%" y="495.50">tokio::run..</text></g><g><title>tokio::runtime::task::waker::waker_ref (501,504 samples, 0.37%)</title><rect x="92.6788%" y="469" width="0.3707%" height="15" fill="rgb(206,173,20)" fg:x="125372905" fg:w="501504"/><text x="92.9288%" y="479.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (501,504 samples, 0.37%)</title><rect x="93.0495%" y="517" width="0.3707%" height="15" fill="rgb(233,88,34)" fg:x="125874409" fg:w="501504"/><text x="93.2995%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (501,504 samples, 0.37%)</title><rect x="93.0495%" y="501" width="0.3707%" height="15" fill="rgb(223,209,46)" fg:x="125874409" fg:w="501504"/><text x="93.2995%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (501,504 samples, 0.37%)</title><rect x="93.0495%" y="485" width="0.3707%" height="15" fill="rgb(250,43,18)" fg:x="125874409" fg:w="501504"/><text x="93.2995%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (501,504 samples, 0.37%)</title><rect x="93.0495%" y="469" width="0.3707%" height="15" fill="rgb(208,13,10)" fg:x="125874409" fg:w="501504"/><text x="93.2995%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (537,170 samples, 0.40%)</title><rect x="93.4202%" y="485" width="0.3971%" height="15" fill="rgb(212,200,36)" fg:x="126375913" fg:w="537170"/><text x="93.6702%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (537,170 samples, 0.40%)</title><rect x="93.4202%" y="469" width="0.3971%" height="15" fill="rgb(225,90,30)" fg:x="126375913" fg:w="537170"/><text x="93.6702%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (537,170 samples, 0.40%)</title><rect x="93.4202%" y="453" width="0.3971%" height="15" fill="rgb(236,182,39)" fg:x="126375913" fg:w="537170"/><text x="93.6702%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (537,170 samples, 0.40%)</title><rect x="93.4202%" y="437" width="0.3971%" height="15" fill="rgb(212,144,35)" fg:x="126375913" fg:w="537170"/><text x="93.6702%" y="447.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,540,178 samples, 1.14%)</title><rect x="93.4202%" y="517" width="1.1385%" height="15" fill="rgb(228,63,44)" fg:x="126375913" fg:w="1540178"/><text x="93.6702%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1,540,178 samples, 1.14%)</title><rect x="93.4202%" y="501" width="1.1385%" height="15" fill="rgb(228,109,6)" fg:x="126375913" fg:w="1540178"/><text x="93.6702%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1,003,008 samples, 0.74%)</title><rect x="93.8173%" y="485" width="0.7414%" height="15" fill="rgb(238,117,24)" fg:x="126913083" fg:w="1003008"/><text x="94.0673%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1,003,008 samples, 0.74%)</title><rect x="93.8173%" y="469" width="0.7414%" height="15" fill="rgb(242,26,26)" fg:x="126913083" fg:w="1003008"/><text x="94.0673%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,003,008 samples, 0.74%)</title><rect x="93.8173%" y="453" width="0.7414%" height="15" fill="rgb(221,92,48)" fg:x="126913083" fg:w="1003008"/><text x="94.0673%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,003,008 samples, 0.74%)</title><rect x="93.8173%" y="437" width="0.7414%" height="15" fill="rgb(209,209,32)" fg:x="126913083" fg:w="1003008"/><text x="94.0673%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::InnerState&gt;&gt; (501,504 samples, 0.37%)</title><rect x="94.5588%" y="453" width="0.3707%" height="15" fill="rgb(221,70,22)" fg:x="127916091" fg:w="501504"/><text x="94.8088%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::InnerState&gt;&gt; (501,504 samples, 0.37%)</title><rect x="94.5588%" y="437" width="0.3707%" height="15" fill="rgb(248,145,5)" fg:x="127916091" fg:w="501504"/><text x="94.8088%" y="447.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (501,504 samples, 0.37%)</title><rect x="94.5588%" y="421" width="0.3707%" height="15" fill="rgb(226,116,26)" fg:x="127916091" fg:w="501504"/><text x="94.8088%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (501,504 samples, 0.37%)</title><rect x="94.5588%" y="405" width="0.3707%" height="15" fill="rgb(244,5,17)" fg:x="127916091" fg:w="501504"/><text x="94.8088%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (501,504 samples, 0.37%)</title><rect x="94.5588%" y="389" width="0.3707%" height="15" fill="rgb(252,159,33)" fg:x="127916091" fg:w="501504"/><text x="94.8088%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (501,504 samples, 0.37%)</title><rect x="94.5588%" y="373" width="0.3707%" height="15" fill="rgb(206,71,0)" fg:x="127916091" fg:w="501504"/><text x="94.8088%" y="383.50"></text></g><g><title>tokio::runtime::time::Inner::lock (994,474 samples, 0.74%)</title><rect x="94.9295%" y="453" width="0.7351%" height="15" fill="rgb(233,118,54)" fg:x="128417595" fg:w="994474"/><text x="95.1795%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (994,474 samples, 0.74%)</title><rect x="94.9295%" y="437" width="0.7351%" height="15" fill="rgb(234,83,48)" fg:x="128417595" fg:w="994474"/><text x="95.1795%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (994,474 samples, 0.74%)</title><rect x="94.9295%" y="421" width="0.7351%" height="15" fill="rgb(228,3,54)" fg:x="128417595" fg:w="994474"/><text x="95.1795%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (994,474 samples, 0.74%)</title><rect x="94.9295%" y="405" width="0.7351%" height="15" fill="rgb(226,155,13)" fg:x="128417595" fg:w="994474"/><text x="95.1795%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (994,474 samples, 0.74%)</title><rect x="94.9295%" y="389" width="0.7351%" height="15" fill="rgb(241,28,37)" fg:x="128417595" fg:w="994474"/><text x="95.1795%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (994,474 samples, 0.74%)</title><rect x="94.9295%" y="373" width="0.7351%" height="15" fill="rgb(233,93,10)" fg:x="128417595" fg:w="994474"/><text x="95.1795%" y="383.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (1,964,499 samples, 1.45%)</title><rect x="94.5588%" y="469" width="1.4522%" height="15" fill="rgb(225,113,19)" fg:x="127916091" fg:w="1964499"/><text x="94.8088%" y="479.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::fire (468,521 samples, 0.35%)</title><rect x="95.6646%" y="453" width="0.3463%" height="15" fill="rgb(241,2,18)" fg:x="129412069" fg:w="468521"/><text x="95.9146%" y="463.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::fire (468,521 samples, 0.35%)</title><rect x="95.6646%" y="437" width="0.3463%" height="15" fill="rgb(228,207,21)" fg:x="129412069" fg:w="468521"/><text x="95.9146%" y="447.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (468,521 samples, 0.35%)</title><rect x="95.6646%" y="421" width="0.3463%" height="15" fill="rgb(213,211,35)" fg:x="129412069" fg:w="468521"/><text x="95.9146%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (468,521 samples, 0.35%)</title><rect x="95.6646%" y="405" width="0.3463%" height="15" fill="rgb(209,83,10)" fg:x="129412069" fg:w="468521"/><text x="95.9146%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_or (468,521 samples, 0.35%)</title><rect x="95.6646%" y="389" width="0.3463%" height="15" fill="rgb(209,164,1)" fg:x="129412069" fg:w="468521"/><text x="95.9146%" y="399.50"></text></g><g><title>tokio::runtime::time::entry::_::&lt;impl core::ops::drop::Drop for tokio::runtime::time::entry::TimerEntry&gt;::drop (2,460,682 samples, 1.82%)</title><rect x="94.5588%" y="517" width="1.8190%" height="15" fill="rgb(213,184,43)" fg:x="127916091" fg:w="2460682"/><text x="94.8088%" y="527.50">t..</text></g><g><title>tokio::runtime::time::entry::_::&lt;impl core::ops::drop::Drop for tokio::runtime::time::entry::TimerEntry&gt;::drop::__drop_inner (2,460,682 samples, 1.82%)</title><rect x="94.5588%" y="501" width="1.8190%" height="15" fill="rgb(231,61,34)" fg:x="127916091" fg:w="2460682"/><text x="94.8088%" y="511.50">t..</text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (2,460,682 samples, 1.82%)</title><rect x="94.5588%" y="485" width="1.8190%" height="15" fill="rgb(235,75,3)" fg:x="127916091" fg:w="2460682"/><text x="94.8088%" y="495.50">t..</text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (496,183 samples, 0.37%)</title><rect x="96.0110%" y="469" width="0.3668%" height="15" fill="rgb(220,106,47)" fg:x="129880590" fg:w="496183"/><text x="96.2610%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (496,183 samples, 0.37%)</title><rect x="96.0110%" y="453" width="0.3668%" height="15" fill="rgb(210,196,33)" fg:x="129880590" fg:w="496183"/><text x="96.2610%" y="463.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (501,504 samples, 0.37%)</title><rect x="96.3778%" y="517" width="0.3707%" height="15" fill="rgb(229,154,42)" fg:x="130376773" fg:w="501504"/><text x="96.6278%" y="527.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (501,504 samples, 0.37%)</title><rect x="96.3778%" y="501" width="0.3707%" height="15" fill="rgb(228,114,26)" fg:x="130376773" fg:w="501504"/><text x="96.6278%" y="511.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (501,504 samples, 0.37%)</title><rect x="96.3778%" y="485" width="0.3707%" height="15" fill="rgb(208,144,1)" fg:x="130376773" fg:w="501504"/><text x="96.6278%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (501,504 samples, 0.37%)</title><rect x="96.3778%" y="469" width="0.3707%" height="15" fill="rgb(239,112,37)" fg:x="130376773" fg:w="501504"/><text x="96.6278%" y="479.50"></text></g><g><title>core::mem::drop (442,455 samples, 0.33%)</title><rect x="97.1192%" y="501" width="0.3271%" height="15" fill="rgb(210,96,50)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::batch_semaphore::Waitlist&gt;&gt; (442,455 samples, 0.33%)</title><rect x="97.1192%" y="485" width="0.3271%" height="15" fill="rgb(222,178,2)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (442,455 samples, 0.33%)</title><rect x="97.1192%" y="469" width="0.3271%" height="15" fill="rgb(226,74,18)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="479.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (442,455 samples, 0.33%)</title><rect x="97.1192%" y="453" width="0.3271%" height="15" fill="rgb(225,67,54)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (442,455 samples, 0.33%)</title><rect x="97.1192%" y="437" width="0.3271%" height="15" fill="rgb(251,92,32)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (442,455 samples, 0.33%)</title><rect x="97.1192%" y="421" width="0.3271%" height="15" fill="rgb(228,149,22)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (442,455 samples, 0.33%)</title><rect x="97.1192%" y="405" width="0.3271%" height="15" fill="rgb(243,54,13)" fg:x="131379781" fg:w="442455"/><text x="97.3692%" y="415.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1,933,236 samples, 1.43%)</title><rect x="96.7485%" y="517" width="1.4291%" height="15" fill="rgb(243,180,28)" fg:x="130878277" fg:w="1933236"/><text x="96.9985%" y="527.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (989,277 samples, 0.73%)</title><rect x="97.4463%" y="501" width="0.7313%" height="15" fill="rgb(208,167,24)" fg:x="131822236" fg:w="989277"/><text x="97.6963%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (989,277 samples, 0.73%)</title><rect x="97.4463%" y="485" width="0.7313%" height="15" fill="rgb(245,73,45)" fg:x="131822236" fg:w="989277"/><text x="97.6963%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (989,277 samples, 0.73%)</title><rect x="97.4463%" y="469" width="0.7313%" height="15" fill="rgb(237,203,48)" fg:x="131822236" fg:w="989277"/><text x="97.6963%" y="479.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="517" width="1.0810%" height="15" fill="rgb(211,197,16)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="501" width="1.0810%" height="15" fill="rgb(243,99,51)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="511.50"></text></g><g><title>tokio::runtime::context::current::with_current (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="485" width="1.0810%" height="15" fill="rgb(215,123,29)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="469" width="1.0810%" height="15" fill="rgb(239,186,37)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="479.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="453" width="1.0810%" height="15" fill="rgb(252,136,39)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="437" width="1.0810%" height="15" fill="rgb(223,213,32)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="421" width="1.0810%" height="15" fill="rgb(233,115,5)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="431.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (1,462,286 samples, 1.08%)</title><rect x="98.1776%" y="405" width="1.0810%" height="15" fill="rgb(207,226,44)" fg:x="132811513" fg:w="1462286"/><text x="98.4276%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (501,504 samples, 0.37%)</title><rect x="99.2586%" y="469" width="0.3707%" height="15" fill="rgb(208,126,0)" fg:x="134273799" fg:w="501504"/><text x="99.5086%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_swap (501,504 samples, 0.37%)</title><rect x="99.2586%" y="453" width="0.3707%" height="15" fill="rgb(244,66,21)" fg:x="134273799" fg:w="501504"/><text x="99.5086%" y="463.50"></text></g><g><title>all (135,276,807 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(222,97,12)" fg:x="0" fg:w="135276807"/><text x="0.2500%" y="559.50"></text></g><g><title>tokio-runtime-w (96,746,806 samples, 71.52%)</title><rect x="28.4823%" y="533" width="71.5177%" height="15" fill="rgb(219,213,19)" fg:x="38530001" fg:w="96746806"/><text x="28.7323%" y="543.50">tokio-runtime-w</text></g><g><title>tokio::util::wake::wake_arc_raw (1,003,008 samples, 0.74%)</title><rect x="99.2586%" y="517" width="0.7414%" height="15" fill="rgb(252,169,30)" fg:x="134273799" fg:w="1003008"/><text x="99.5086%" y="527.50"></text></g><g><title>&lt;tokio::runtime::park::Inner as tokio::util::wake::Wake&gt;::wake (1,003,008 samples, 0.74%)</title><rect x="99.2586%" y="501" width="0.7414%" height="15" fill="rgb(206,32,51)" fg:x="134273799" fg:w="1003008"/><text x="99.5086%" y="511.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1,003,008 samples, 0.74%)</title><rect x="99.2586%" y="485" width="0.7414%" height="15" fill="rgb(250,172,42)" fg:x="134273799" fg:w="1003008"/><text x="99.5086%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (501,504 samples, 0.37%)</title><rect x="99.6293%" y="469" width="0.3707%" height="15" fill="rgb(209,34,43)" fg:x="134775303" fg:w="501504"/><text x="99.8793%" y="479.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (501,504 samples, 0.37%)</title><rect x="99.6293%" y="453" width="0.3707%" height="15" fill="rgb(223,11,35)" fg:x="134775303" fg:w="501504"/><text x="99.8793%" y="463.50"></text></g><g><title>syscall (501,504 samples, 0.37%)</title><rect x="99.6293%" y="437" width="0.3707%" height="15" fill="rgb(251,219,26)" fg:x="134775303" fg:w="501504"/><text x="99.8793%" y="447.50"></text></g></svg></svg>