---
# ProRT-IP WarScan Test Environment
#
# This Docker Compose file sets up a comprehensive test environment for
# ProRT-IP Phase 4 performance benchmarking and service detection validation.
#
# Services included:
#   - metasploitable2: Vulnerable VM with multiple services (HTTP, FTP, SSH, etc.)
#   - nginx: Modern HTTP/HTTPS server
#   - openssh: SSH server for banner grabbing tests
#   - vsftpd: FTP server
#   - postfix: SMTP server
#   - mysql: MySQL database
#   - postgres: PostgreSQL database
#   - redis: Redis key-value store
#   - bind9: DNS server
#   - snmpd: SNMP agent
#
# Usage:
#   docker-compose up -d                  # Start all services
#   docker-compose ps                     # List running containers
#   docker-compose logs -f <service>      # View logs
#   docker-compose down                   # Stop and remove containers
#
#   # With network latency simulation:
#   docker-compose up -d
#   sudo ../scripts/network-latency.sh docker 50ms  # Add 50ms latency
#
# Phase 4 Testing:
#   - Use these services to validate service detection accuracy
#   - Benchmark performance with realistic network latency
#   - Compare ProRT-IP results with Nmap baseline
#

version: '3.8'

services:
  # Metasploitable2 - Comprehensive vulnerable VM
  metasploitable2:
    image: docker.io/tleemcjr/metasploitable2
    container_name: prtip-metasploitable2
    networks:
      prtip_test:
        ipv4_address: 172.20.0.10
    ports:
      - "2021:21"    # FTP
      - "2022:22"    # SSH
      - "2023:23"    # Telnet
      - "2025:25"    # SMTP
      - "2053:53/tcp" # DNS TCP
      - "2053:53/udp" # DNS UDP
      - "8080:80"    # HTTP
      - "2139:139"   # NetBIOS
      - "2445:445"   # SMB
      - "3306:3306"  # MySQL
      - "5432:5432"  # PostgreSQL
      - "8180:8180"  # Tomcat
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "80"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx - Modern HTTP/HTTPS server
  nginx:
    image: docker.io/library/nginx:latest
    container_name: prtip-nginx
    networks:
      prtip_test:
        ipv4_address: 172.20.0.20
    ports:
      - "8081:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  # OpenSSH Server
  openssh:
    image: docker.io/linuxserver/openssh-server
    container_name: prtip-openssh
    networks:
      prtip_test:
        ipv4_address: 172.20.0.21
    ports:
      - "2222:2222"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - PUBLIC_KEY=# Optional SSH public key
      - USER_NAME=testuser
      - USER_PASSWORD=testpassword
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2222"]
      interval: 10s
      timeout: 5s
      retries: 3

  # vsftpd - FTP Server
  vsftpd:
    image: docker.io/fauria/vsftpd
    container_name: prtip-vsftpd
    networks:
      prtip_test:
        ipv4_address: 172.20.0.22
    ports:
      - "2020:20"
      - "2121:21"
      - "21100-21110:21100-21110"
    environment:
      - FTP_USER=testuser
      - FTP_PASS=testpass
      - PASV_ADDRESS=127.0.0.1
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: docker.io/library/mysql:8.0
    container_name: prtip-mysql
    networks:
      prtip_test:
        ipv4_address: 172.20.0.30
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=testdb
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=testpass
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: docker.io/library/postgres:15
    container_name: prtip-postgres
    networks:
      prtip_test:
        ipv4_address: 172.20.0.31
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_DB=testdb
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis Key-Value Store
  redis:
    image: docker.io/library/redis:7-alpine
    container_name: prtip-redis
    networks:
      prtip_test:
        ipv4_address: 172.20.0.32
    ports:
      - "6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Memcached
  memcached:
    image: docker.io/library/memcached:latest
    container_name: prtip-memcached
    networks:
      prtip_test:
        ipv4_address: 172.20.0.33
    ports:
      - "11212:11211"
    restart: unless-stopped

  # BIND9 DNS Server
  bind9:
    image: docker.io/ubuntu/bind9:latest
    container_name: prtip-bind9
    networks:
      prtip_test:
        ipv4_address: 172.20.0.40
    ports:
      - "5353:53/tcp"
      - "5353:53/udp"
    environment:
      - BIND9_USER=root
      - TZ=UTC
    restart: unless-stopped

  # Net-SNMP Agent
  snmpd:
    image: docker.io/polinux/snmpd
    container_name: prtip-snmpd
    networks:
      prtip_test:
        ipv4_address: 172.20.0.41
    ports:
      - "1161:161/udp"
    environment:
      - SNMP_COMMUNITY=public
    restart: unless-stopped

networks:
  prtip_test:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

volumes:
  mysql_data:
  postgres_data:
